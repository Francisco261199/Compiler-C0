-----------------------------------------------------------------------------
Info file generated by Happy Version 1.19.11 from ParserC0.y
-----------------------------------------------------------------------------

state 46 contains 2 shift/reduce conflicts.
state 76 contains 2 shift/reduce conflicts.
state 125 contains 1 shift/reduce conflicts.

-----------------------------------------------------------------------------
Grammar
-----------------------------------------------------------------------------
	%start_parserC0 -> Funcs                           (0)
	Funcs -> Func                                      (1)
	Funcs -> Funcs Func                                (2)
	Func -> Type id '(' Decl ')' '{' Stmts ReturnStm ';' '}'   (3)
	Func -> Type main '(' ')' '{' Stmts '}'            (4)
	ReturnStm -> return Exps                           (5)
	ReturnStm -> return true                           (6)
	ReturnStm -> return false                          (7)
	Stm -> id '=' Exp ';'                              (8)
	Stm -> id '=' scanint '(' ')' ';'                  (9)
	Stm -> Type id ';'                                 (10)
	Stm -> Type id '=' Exp ';'                         (11)
	Stm -> if '(' ExpCompare ')' Stm else Stm          (12)
	Stm -> if '(' ExpCompare ')' Stm                   (13)
	Stm -> while '(' ExpCompare ')' Stm                (14)
	Stm -> '{' Stmts '}'                               (15)
	Stm -> ReturnStm ';'                               (16)
	Stm -> id '(' Exps ')' ';'                         (17)
	Stm -> printint '(' Exp ')' ';'                    (18)
	Stm -> printstr '(' str ')' ';'                    (19)
	Exp -> num                                         (20)
	Exp -> str                                         (21)
	Exp -> id                                          (22)
	Exp -> '(' Exp ')'                                 (23)
	Exp -> Exp '+' Exp                                 (24)
	Exp -> Exp '-' Exp                                 (25)
	Exp -> Exp '*' Exp                                 (26)
	Exp -> Exp '/' Exp                                 (27)
	Exp -> Exp '%' Exp                                 (28)
	Exp -> id '(' Exps ')'                             (29)
	Exp -> '+' '+' id                                  (30)
	Exp -> id '+' '+'                                  (31)
	Exp -> '-' '-' id                                  (32)
	Exp -> id '-' '-'                                  (33)
	ExpCompare -> Exp "==" Exp                         (34)
	ExpCompare -> Exp "!=" Exp                         (35)
	ExpCompare -> Exp "<=" Exp                         (36)
	ExpCompare -> Exp ">=" Exp                         (37)
	ExpCompare -> Exp "<" Exp                          (38)
	ExpCompare -> Exp ">" Exp                          (39)
	ExpCompare -> ExpCompare "&&" ExpCompare           (40)
	ExpCompare -> ExpCompare "||" ExpCompare           (41)
	ExpCompare -> '!' '(' ExpCompare ')'               (42)
	ExpCompare -> true                                 (43)
	ExpCompare -> false                                (44)
	ExpCompare -> id '(' Exps ')'                      (45)
	Stmts ->                                           (46)
	Stmts -> Stmts Stm                                 (47)
	Type -> int                                        (48)
	Type -> bool                                       (49)
	Type -> string                                     (50)
	Decl ->                                            (51)
	Decl -> Type id                                    (52)
	Decl -> Decl ',' Type id                           (53)
	Exps ->                                            (54)
	Exps -> Exp                                        (55)
	Exps -> Exps ',' Exp                               (56)

-----------------------------------------------------------------------------
Terminals
-----------------------------------------------------------------------------
	num            { NUM_TOK $$ }
	str            { STRING_TOK $$ }
	id             { VAR_TOK $$ }
	true           { TRUE_TOK $$ }
	false          { FALSE_TOK $$ }
	return         { RETURN_TOK }
	main           { MAIN_TOK }
	int            { INT_DEF_TOK }
	bool           { BOOL_DEF_TOK }
	string         { STRING_DEF_TOK }
	'('            { LPAREN_TOK }
	')'            { RPAREN_TOK }
	'='            { ASSIGN_TOK }
	'{'            { LBRACE_TOK }
	'}'            { RBRACE_TOK }
	'+'            { PLUS_TOK }
	'-'            { MINUS_TOK }
	'*'            { MULT_TOK }
	'/'            { DIV_TOK }
	'%'            { MOD_TOK }
	';'            { SEMICOLON_TOK }
	','            { COLON_TOK }
	"=="           { EQUAL_TOK }
	"!="           { NEQUAL_TOK }
	"<"            { LTHEN_TOK }
	">"            { GTHEN_TOK }
	">="           { GTOE_TOK }
	"<="           { LTOE_TOK }
	"&&"           { AND_TOK }
	"||"           { OR_TOK }
	'!'            { NOT_TOK }
	if             { IF_TOK }
	else           { ELSE_TOK }
	while          { WHILE_TOK }
	printint       { PRINTINT_TOK }
	scanint        { SCANINT_TOK }
	printstr       { PRINTSTR_TOK }

-----------------------------------------------------------------------------
Non-terminals
-----------------------------------------------------------------------------
	%start_parserC0 rule  0
	Funcs           rules 1, 2
	Func            rules 3, 4
	ReturnStm       rules 5, 6, 7
	Stm             rules 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19
	Exp             rules 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33
	ExpCompare      rules 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45
	Stmts           rules 46, 47
	Type            rules 48, 49, 50
	Decl            rules 51, 52, 53
	Exps            rules 54, 55, 56

-----------------------------------------------------------------------------
States
-----------------------------------------------------------------------------
State 0


	int            shift, and enter state 4
	bool           shift, and enter state 5
	string         shift, and enter state 6

	Funcs          goto state 7
	Func           goto state 2
	Type           goto state 3

State 1


	int            shift, and enter state 4
	bool           shift, and enter state 5
	string         shift, and enter state 6

	Func           goto state 2
	Type           goto state 3

State 2

	Funcs -> Func .                                     (rule 1)

	int            reduce using rule 1
	bool           reduce using rule 1
	string         reduce using rule 1
	%eof           reduce using rule 1


State 3

	Func -> Type . id '(' Decl ')' '{' Stmts ReturnStm ';' '}'    (rule 3)
	Func -> Type . main '(' ')' '{' Stmts '}'           (rule 4)

	id             shift, and enter state 9
	main           shift, and enter state 10


State 4

	Type -> int .                                       (rule 48)

	id             reduce using rule 48
	main           reduce using rule 48


State 5

	Type -> bool .                                      (rule 49)

	id             reduce using rule 49
	main           reduce using rule 49


State 6

	Type -> string .                                    (rule 50)

	id             reduce using rule 50
	main           reduce using rule 50


State 7

	%start_parserC0 -> Funcs .                          (rule 0)
	Funcs -> Funcs . Func                               (rule 2)

	int            shift, and enter state 4
	bool           shift, and enter state 5
	string         shift, and enter state 6
	%eof           accept

	Func           goto state 8
	Type           goto state 3

State 8

	Funcs -> Funcs Func .                               (rule 2)

	int            reduce using rule 2
	bool           reduce using rule 2
	string         reduce using rule 2
	%eof           reduce using rule 2


State 9

	Func -> Type id . '(' Decl ')' '{' Stmts ReturnStm ';' '}'    (rule 3)

	'('            shift, and enter state 12


State 10

	Func -> Type main . '(' ')' '{' Stmts '}'           (rule 4)

	'('            shift, and enter state 11


State 11

	Func -> Type main '(' . ')' '{' Stmts '}'           (rule 4)

	')'            shift, and enter state 15


State 12

	Func -> Type id '(' . Decl ')' '{' Stmts ReturnStm ';' '}'    (rule 3)

	int            shift, and enter state 4
	bool           shift, and enter state 5
	string         shift, and enter state 6
	')'            reduce using rule 51
	','            reduce using rule 51

	Type           goto state 13
	Decl           goto state 14

State 13

	Decl -> Type . id                                   (rule 52)

	id             shift, and enter state 19


State 14

	Func -> Type id '(' Decl . ')' '{' Stmts ReturnStm ';' '}'    (rule 3)
	Decl -> Decl . ',' Type id                          (rule 53)

	')'            shift, and enter state 17
	','            shift, and enter state 18


State 15

	Func -> Type main '(' ')' . '{' Stmts '}'           (rule 4)

	'{'            shift, and enter state 16


State 16

	Func -> Type main '(' ')' '{' . Stmts '}'           (rule 4)

	id             reduce using rule 46
	return         reduce using rule 46
	int            reduce using rule 46
	bool           reduce using rule 46
	string         reduce using rule 46
	'{'            reduce using rule 46
	'}'            reduce using rule 46
	if             reduce using rule 46
	while          reduce using rule 46
	printint       reduce using rule 46
	printstr       reduce using rule 46

	Stmts          goto state 22

State 17

	Func -> Type id '(' Decl ')' . '{' Stmts ReturnStm ';' '}'    (rule 3)

	'{'            shift, and enter state 21


State 18

	Decl -> Decl ',' . Type id                          (rule 53)

	int            shift, and enter state 4
	bool           shift, and enter state 5
	string         shift, and enter state 6

	Type           goto state 20

State 19

	Decl -> Type id .                                   (rule 52)

	')'            reduce using rule 52
	','            reduce using rule 52


State 20

	Decl -> Decl ',' Type . id                          (rule 53)

	id             shift, and enter state 35


State 21

	Func -> Type id '(' Decl ')' '{' . Stmts ReturnStm ';' '}'    (rule 3)

	id             reduce using rule 46
	return         reduce using rule 46
	int            reduce using rule 46
	bool           reduce using rule 46
	string         reduce using rule 46
	'{'            reduce using rule 46
	if             reduce using rule 46
	while          reduce using rule 46
	printint       reduce using rule 46
	printstr       reduce using rule 46

	Stmts          goto state 34

State 22

	Func -> Type main '(' ')' '{' Stmts . '}'           (rule 4)
	Stmts -> Stmts . Stm                                (rule 47)

	id             shift, and enter state 26
	return         shift, and enter state 27
	int            shift, and enter state 4
	bool           shift, and enter state 5
	string         shift, and enter state 6
	'{'            shift, and enter state 28
	'}'            shift, and enter state 29
	if             shift, and enter state 30
	while          shift, and enter state 31
	printint       shift, and enter state 32
	printstr       shift, and enter state 33

	ReturnStm      goto state 23
	Stm            goto state 24
	Type           goto state 25

State 23

	Stm -> ReturnStm . ';'                              (rule 16)

	';'            shift, and enter state 55


State 24

	Stmts -> Stmts Stm .                                (rule 47)

	id             reduce using rule 47
	return         reduce using rule 47
	int            reduce using rule 47
	bool           reduce using rule 47
	string         reduce using rule 47
	'{'            reduce using rule 47
	'}'            reduce using rule 47
	if             reduce using rule 47
	while          reduce using rule 47
	printint       reduce using rule 47
	printstr       reduce using rule 47


State 25

	Stm -> Type . id ';'                                (rule 10)
	Stm -> Type . id '=' Exp ';'                        (rule 11)

	id             shift, and enter state 54


State 26

	Stm -> id . '=' Exp ';'                             (rule 8)
	Stm -> id . '=' scanint '(' ')' ';'                 (rule 9)
	Stm -> id . '(' Exps ')' ';'                        (rule 17)

	'('            shift, and enter state 52
	'='            shift, and enter state 53


State 27

	ReturnStm -> return . Exps                          (rule 5)
	ReturnStm -> return . true                          (rule 6)
	ReturnStm -> return . false                         (rule 7)

	num            shift, and enter state 44
	str            shift, and enter state 45
	id             shift, and enter state 46
	true           shift, and enter state 47
	false          shift, and enter state 48
	'('            shift, and enter state 49
	'+'            shift, and enter state 50
	'-'            shift, and enter state 51
	';'            reduce using rule 54
	','            reduce using rule 54

	Exp            goto state 42
	Exps           goto state 43

State 28

	Stm -> '{' . Stmts '}'                              (rule 15)

	id             reduce using rule 46
	return         reduce using rule 46
	int            reduce using rule 46
	bool           reduce using rule 46
	string         reduce using rule 46
	'{'            reduce using rule 46
	'}'            reduce using rule 46
	if             reduce using rule 46
	while          reduce using rule 46
	printint       reduce using rule 46
	printstr       reduce using rule 46

	Stmts          goto state 41

State 29

	Func -> Type main '(' ')' '{' Stmts '}' .           (rule 4)

	int            reduce using rule 4
	bool           reduce using rule 4
	string         reduce using rule 4
	%eof           reduce using rule 4


State 30

	Stm -> if . '(' ExpCompare ')' Stm else Stm         (rule 12)
	Stm -> if . '(' ExpCompare ')' Stm                  (rule 13)

	'('            shift, and enter state 40


State 31

	Stm -> while . '(' ExpCompare ')' Stm               (rule 14)

	'('            shift, and enter state 39


State 32

	Stm -> printint . '(' Exp ')' ';'                   (rule 18)

	'('            shift, and enter state 38


State 33

	Stm -> printstr . '(' str ')' ';'                   (rule 19)

	'('            shift, and enter state 37


State 34

	Func -> Type id '(' Decl ')' '{' Stmts . ReturnStm ';' '}'    (rule 3)
	Stmts -> Stmts . Stm                                (rule 47)

	id             shift, and enter state 26
	return         shift, and enter state 27
	int            shift, and enter state 4
	bool           shift, and enter state 5
	string         shift, and enter state 6
	'{'            shift, and enter state 28
	if             shift, and enter state 30
	while          shift, and enter state 31
	printint       shift, and enter state 32
	printstr       shift, and enter state 33

	ReturnStm      goto state 36
	Stm            goto state 24
	Type           goto state 25

State 35

	Decl -> Decl ',' Type id .                          (rule 53)

	')'            reduce using rule 53
	','            reduce using rule 53


State 36

	Func -> Type id '(' Decl ')' '{' Stmts ReturnStm . ';' '}'    (rule 3)
	Stm -> ReturnStm . ';'                              (rule 16)

	';'            shift, and enter state 83


State 37

	Stm -> printstr '(' . str ')' ';'                   (rule 19)

	str            shift, and enter state 82


State 38

	Stm -> printint '(' . Exp ')' ';'                   (rule 18)

	num            shift, and enter state 44
	str            shift, and enter state 45
	id             shift, and enter state 46
	'('            shift, and enter state 49
	'+'            shift, and enter state 50
	'-'            shift, and enter state 51

	Exp            goto state 81

State 39

	Stm -> while '(' . ExpCompare ')' Stm               (rule 14)

	num            shift, and enter state 44
	str            shift, and enter state 45
	id             shift, and enter state 76
	true           shift, and enter state 77
	false          shift, and enter state 78
	'('            shift, and enter state 49
	'+'            shift, and enter state 50
	'-'            shift, and enter state 51
	'!'            shift, and enter state 79

	Exp            goto state 74
	ExpCompare     goto state 80

State 40

	Stm -> if '(' . ExpCompare ')' Stm else Stm         (rule 12)
	Stm -> if '(' . ExpCompare ')' Stm                  (rule 13)

	num            shift, and enter state 44
	str            shift, and enter state 45
	id             shift, and enter state 76
	true           shift, and enter state 77
	false          shift, and enter state 78
	'('            shift, and enter state 49
	'+'            shift, and enter state 50
	'-'            shift, and enter state 51
	'!'            shift, and enter state 79

	Exp            goto state 74
	ExpCompare     goto state 75

State 41

	Stm -> '{' Stmts . '}'                              (rule 15)
	Stmts -> Stmts . Stm                                (rule 47)

	id             shift, and enter state 26
	return         shift, and enter state 27
	int            shift, and enter state 4
	bool           shift, and enter state 5
	string         shift, and enter state 6
	'{'            shift, and enter state 28
	'}'            shift, and enter state 73
	if             shift, and enter state 30
	while          shift, and enter state 31
	printint       shift, and enter state 32
	printstr       shift, and enter state 33

	ReturnStm      goto state 23
	Stm            goto state 24
	Type           goto state 25

State 42

	Exp -> Exp . '+' Exp                                (rule 24)
	Exp -> Exp . '-' Exp                                (rule 25)
	Exp -> Exp . '*' Exp                                (rule 26)
	Exp -> Exp . '/' Exp                                (rule 27)
	Exp -> Exp . '%' Exp                                (rule 28)
	Exps -> Exp .                                       (rule 55)

	')'            reduce using rule 55
	'+'            shift, and enter state 68
	'-'            shift, and enter state 69
	'*'            shift, and enter state 70
	'/'            shift, and enter state 71
	'%'            shift, and enter state 72
	';'            reduce using rule 55
	','            reduce using rule 55


State 43

	ReturnStm -> return Exps .                          (rule 5)
	Exps -> Exps . ',' Exp                              (rule 56)

	';'            reduce using rule 5
	','            shift, and enter state 67


State 44

	Exp -> num .                                        (rule 20)

	')'            reduce using rule 20
	'+'            reduce using rule 20
	'-'            reduce using rule 20
	'*'            reduce using rule 20
	'/'            reduce using rule 20
	'%'            reduce using rule 20
	';'            reduce using rule 20
	','            reduce using rule 20
	"=="           reduce using rule 20
	"!="           reduce using rule 20
	"<"            reduce using rule 20
	">"            reduce using rule 20
	">="           reduce using rule 20
	"<="           reduce using rule 20
	"&&"           reduce using rule 20
	"||"           reduce using rule 20


State 45

	Exp -> str .                                        (rule 21)

	')'            reduce using rule 21
	'+'            reduce using rule 21
	'-'            reduce using rule 21
	'*'            reduce using rule 21
	'/'            reduce using rule 21
	'%'            reduce using rule 21
	';'            reduce using rule 21
	','            reduce using rule 21
	"=="           reduce using rule 21
	"!="           reduce using rule 21
	"<"            reduce using rule 21
	">"            reduce using rule 21
	">="           reduce using rule 21
	"<="           reduce using rule 21
	"&&"           reduce using rule 21
	"||"           reduce using rule 21


State 46

	Exp -> id .                                         (rule 22)
	Exp -> id . '(' Exps ')'                            (rule 29)
	Exp -> id . '+' '+'                                 (rule 31)
	Exp -> id . '-' '-'                                 (rule 33)

	'('            shift, and enter state 64
	')'            reduce using rule 22
	'+'            shift, and enter state 65
			(reduce using rule 22)

	'-'            shift, and enter state 66
			(reduce using rule 22)

	'*'            reduce using rule 22
	'/'            reduce using rule 22
	'%'            reduce using rule 22
	';'            reduce using rule 22
	','            reduce using rule 22
	"=="           reduce using rule 22
	"!="           reduce using rule 22
	"<"            reduce using rule 22
	">"            reduce using rule 22
	">="           reduce using rule 22
	"<="           reduce using rule 22
	"&&"           reduce using rule 22
	"||"           reduce using rule 22


State 47

	ReturnStm -> return true .                          (rule 6)

	';'            reduce using rule 6


State 48

	ReturnStm -> return false .                         (rule 7)

	';'            reduce using rule 7


State 49

	Exp -> '(' . Exp ')'                                (rule 23)

	num            shift, and enter state 44
	str            shift, and enter state 45
	id             shift, and enter state 46
	'('            shift, and enter state 49
	'+'            shift, and enter state 50
	'-'            shift, and enter state 51

	Exp            goto state 63

State 50

	Exp -> '+' . '+' id                                 (rule 30)

	'+'            shift, and enter state 62


State 51

	Exp -> '-' . '-' id                                 (rule 32)

	'-'            shift, and enter state 61


State 52

	Stm -> id '(' . Exps ')' ';'                        (rule 17)

	num            shift, and enter state 44
	str            shift, and enter state 45
	id             shift, and enter state 46
	'('            shift, and enter state 49
	')'            reduce using rule 54
	'+'            shift, and enter state 50
	'-'            shift, and enter state 51
	','            reduce using rule 54

	Exp            goto state 42
	Exps           goto state 60

State 53

	Stm -> id '=' . Exp ';'                             (rule 8)
	Stm -> id '=' . scanint '(' ')' ';'                 (rule 9)

	num            shift, and enter state 44
	str            shift, and enter state 45
	id             shift, and enter state 46
	'('            shift, and enter state 49
	'+'            shift, and enter state 50
	'-'            shift, and enter state 51
	scanint        shift, and enter state 59

	Exp            goto state 58

State 54

	Stm -> Type id . ';'                                (rule 10)
	Stm -> Type id . '=' Exp ';'                        (rule 11)

	'='            shift, and enter state 56
	';'            shift, and enter state 57


State 55

	Stm -> ReturnStm ';' .                              (rule 16)

	id             reduce using rule 16
	return         reduce using rule 16
	int            reduce using rule 16
	bool           reduce using rule 16
	string         reduce using rule 16
	'{'            reduce using rule 16
	'}'            reduce using rule 16
	if             reduce using rule 16
	else           reduce using rule 16
	while          reduce using rule 16
	printint       reduce using rule 16
	printstr       reduce using rule 16


State 56

	Stm -> Type id '=' . Exp ';'                        (rule 11)

	num            shift, and enter state 44
	str            shift, and enter state 45
	id             shift, and enter state 46
	'('            shift, and enter state 49
	'+'            shift, and enter state 50
	'-'            shift, and enter state 51

	Exp            goto state 114

State 57

	Stm -> Type id ';' .                                (rule 10)

	id             reduce using rule 10
	return         reduce using rule 10
	int            reduce using rule 10
	bool           reduce using rule 10
	string         reduce using rule 10
	'{'            reduce using rule 10
	'}'            reduce using rule 10
	if             reduce using rule 10
	else           reduce using rule 10
	while          reduce using rule 10
	printint       reduce using rule 10
	printstr       reduce using rule 10


State 58

	Stm -> id '=' Exp . ';'                             (rule 8)
	Exp -> Exp . '+' Exp                                (rule 24)
	Exp -> Exp . '-' Exp                                (rule 25)
	Exp -> Exp . '*' Exp                                (rule 26)
	Exp -> Exp . '/' Exp                                (rule 27)
	Exp -> Exp . '%' Exp                                (rule 28)

	'+'            shift, and enter state 68
	'-'            shift, and enter state 69
	'*'            shift, and enter state 70
	'/'            shift, and enter state 71
	'%'            shift, and enter state 72
	';'            shift, and enter state 113


State 59

	Stm -> id '=' scanint . '(' ')' ';'                 (rule 9)

	'('            shift, and enter state 112


State 60

	Stm -> id '(' Exps . ')' ';'                        (rule 17)
	Exps -> Exps . ',' Exp                              (rule 56)

	')'            shift, and enter state 111
	','            shift, and enter state 67


State 61

	Exp -> '-' '-' . id                                 (rule 32)

	id             shift, and enter state 110


State 62

	Exp -> '+' '+' . id                                 (rule 30)

	id             shift, and enter state 109


State 63

	Exp -> '(' Exp . ')'                                (rule 23)
	Exp -> Exp . '+' Exp                                (rule 24)
	Exp -> Exp . '-' Exp                                (rule 25)
	Exp -> Exp . '*' Exp                                (rule 26)
	Exp -> Exp . '/' Exp                                (rule 27)
	Exp -> Exp . '%' Exp                                (rule 28)

	')'            shift, and enter state 108
	'+'            shift, and enter state 68
	'-'            shift, and enter state 69
	'*'            shift, and enter state 70
	'/'            shift, and enter state 71
	'%'            shift, and enter state 72


State 64

	Exp -> id '(' . Exps ')'                            (rule 29)

	num            shift, and enter state 44
	str            shift, and enter state 45
	id             shift, and enter state 46
	'('            shift, and enter state 49
	')'            reduce using rule 54
	'+'            shift, and enter state 50
	'-'            shift, and enter state 51
	','            reduce using rule 54

	Exp            goto state 42
	Exps           goto state 107

State 65

	Exp -> id '+' . '+'                                 (rule 31)

	'+'            shift, and enter state 106


State 66

	Exp -> id '-' . '-'                                 (rule 33)

	'-'            shift, and enter state 105


State 67

	Exps -> Exps ',' . Exp                              (rule 56)

	num            shift, and enter state 44
	str            shift, and enter state 45
	id             shift, and enter state 46
	'('            shift, and enter state 49
	'+'            shift, and enter state 50
	'-'            shift, and enter state 51

	Exp            goto state 104

State 68

	Exp -> Exp '+' . Exp                                (rule 24)

	num            shift, and enter state 44
	str            shift, and enter state 45
	id             shift, and enter state 46
	'('            shift, and enter state 49
	'+'            shift, and enter state 50
	'-'            shift, and enter state 51

	Exp            goto state 103

State 69

	Exp -> Exp '-' . Exp                                (rule 25)

	num            shift, and enter state 44
	str            shift, and enter state 45
	id             shift, and enter state 46
	'('            shift, and enter state 49
	'+'            shift, and enter state 50
	'-'            shift, and enter state 51

	Exp            goto state 102

State 70

	Exp -> Exp '*' . Exp                                (rule 26)

	num            shift, and enter state 44
	str            shift, and enter state 45
	id             shift, and enter state 46
	'('            shift, and enter state 49
	'+'            shift, and enter state 50
	'-'            shift, and enter state 51

	Exp            goto state 101

State 71

	Exp -> Exp '/' . Exp                                (rule 27)

	num            shift, and enter state 44
	str            shift, and enter state 45
	id             shift, and enter state 46
	'('            shift, and enter state 49
	'+'            shift, and enter state 50
	'-'            shift, and enter state 51

	Exp            goto state 100

State 72

	Exp -> Exp '%' . Exp                                (rule 28)

	num            shift, and enter state 44
	str            shift, and enter state 45
	id             shift, and enter state 46
	'('            shift, and enter state 49
	'+'            shift, and enter state 50
	'-'            shift, and enter state 51

	Exp            goto state 99

State 73

	Stm -> '{' Stmts '}' .                              (rule 15)

	id             reduce using rule 15
	return         reduce using rule 15
	int            reduce using rule 15
	bool           reduce using rule 15
	string         reduce using rule 15
	'{'            reduce using rule 15
	'}'            reduce using rule 15
	if             reduce using rule 15
	else           reduce using rule 15
	while          reduce using rule 15
	printint       reduce using rule 15
	printstr       reduce using rule 15


State 74

	Exp -> Exp . '+' Exp                                (rule 24)
	Exp -> Exp . '-' Exp                                (rule 25)
	Exp -> Exp . '*' Exp                                (rule 26)
	Exp -> Exp . '/' Exp                                (rule 27)
	Exp -> Exp . '%' Exp                                (rule 28)
	ExpCompare -> Exp . "==" Exp                        (rule 34)
	ExpCompare -> Exp . "!=" Exp                        (rule 35)
	ExpCompare -> Exp . "<=" Exp                        (rule 36)
	ExpCompare -> Exp . ">=" Exp                        (rule 37)
	ExpCompare -> Exp . "<" Exp                         (rule 38)
	ExpCompare -> Exp . ">" Exp                         (rule 39)

	'+'            shift, and enter state 68
	'-'            shift, and enter state 69
	'*'            shift, and enter state 70
	'/'            shift, and enter state 71
	'%'            shift, and enter state 72
	"=="           shift, and enter state 93
	"!="           shift, and enter state 94
	"<"            shift, and enter state 95
	">"            shift, and enter state 96
	">="           shift, and enter state 97
	"<="           shift, and enter state 98


State 75

	Stm -> if '(' ExpCompare . ')' Stm else Stm         (rule 12)
	Stm -> if '(' ExpCompare . ')' Stm                  (rule 13)
	ExpCompare -> ExpCompare . "&&" ExpCompare          (rule 40)
	ExpCompare -> ExpCompare . "||" ExpCompare          (rule 41)

	')'            shift, and enter state 92
	"&&"           shift, and enter state 88
	"||"           shift, and enter state 89


State 76

	Exp -> id .                                         (rule 22)
	Exp -> id . '(' Exps ')'                            (rule 29)
	Exp -> id . '+' '+'                                 (rule 31)
	Exp -> id . '-' '-'                                 (rule 33)
	ExpCompare -> id . '(' Exps ')'                     (rule 45)

	'('            shift, and enter state 91
	'+'            shift, and enter state 65
			(reduce using rule 22)

	'-'            shift, and enter state 66
			(reduce using rule 22)

	'*'            reduce using rule 22
	'/'            reduce using rule 22
	'%'            reduce using rule 22
	"=="           reduce using rule 22
	"!="           reduce using rule 22
	"<"            reduce using rule 22
	">"            reduce using rule 22
	">="           reduce using rule 22
	"<="           reduce using rule 22


State 77

	ExpCompare -> true .                                (rule 43)

	')'            reduce using rule 43
	"&&"           reduce using rule 43
	"||"           reduce using rule 43


State 78

	ExpCompare -> false .                               (rule 44)

	')'            reduce using rule 44
	"&&"           reduce using rule 44
	"||"           reduce using rule 44


State 79

	ExpCompare -> '!' . '(' ExpCompare ')'              (rule 42)

	'('            shift, and enter state 90


State 80

	Stm -> while '(' ExpCompare . ')' Stm               (rule 14)
	ExpCompare -> ExpCompare . "&&" ExpCompare          (rule 40)
	ExpCompare -> ExpCompare . "||" ExpCompare          (rule 41)

	')'            shift, and enter state 87
	"&&"           shift, and enter state 88
	"||"           shift, and enter state 89


State 81

	Stm -> printint '(' Exp . ')' ';'                   (rule 18)
	Exp -> Exp . '+' Exp                                (rule 24)
	Exp -> Exp . '-' Exp                                (rule 25)
	Exp -> Exp . '*' Exp                                (rule 26)
	Exp -> Exp . '/' Exp                                (rule 27)
	Exp -> Exp . '%' Exp                                (rule 28)

	')'            shift, and enter state 86
	'+'            shift, and enter state 68
	'-'            shift, and enter state 69
	'*'            shift, and enter state 70
	'/'            shift, and enter state 71
	'%'            shift, and enter state 72


State 82

	Stm -> printstr '(' str . ')' ';'                   (rule 19)

	')'            shift, and enter state 85


State 83

	Func -> Type id '(' Decl ')' '{' Stmts ReturnStm ';' . '}'    (rule 3)
	Stm -> ReturnStm ';' .                              (rule 16)

	id             reduce using rule 16
	return         reduce using rule 16
	int            reduce using rule 16
	bool           reduce using rule 16
	string         reduce using rule 16
	'{'            reduce using rule 16
	'}'            shift, and enter state 84
	if             reduce using rule 16
	while          reduce using rule 16
	printint       reduce using rule 16
	printstr       reduce using rule 16


State 84

	Func -> Type id '(' Decl ')' '{' Stmts ReturnStm ';' '}' .    (rule 3)

	int            reduce using rule 3
	bool           reduce using rule 3
	string         reduce using rule 3
	%eof           reduce using rule 3


State 85

	Stm -> printstr '(' str ')' . ';'                   (rule 19)

	';'            shift, and enter state 132


State 86

	Stm -> printint '(' Exp ')' . ';'                   (rule 18)

	';'            shift, and enter state 131


State 87

	Stm -> while '(' ExpCompare ')' . Stm               (rule 14)

	id             shift, and enter state 26
	return         shift, and enter state 27
	int            shift, and enter state 4
	bool           shift, and enter state 5
	string         shift, and enter state 6
	'{'            shift, and enter state 28
	if             shift, and enter state 30
	while          shift, and enter state 31
	printint       shift, and enter state 32
	printstr       shift, and enter state 33

	ReturnStm      goto state 23
	Stm            goto state 130
	Type           goto state 25

State 88

	ExpCompare -> ExpCompare "&&" . ExpCompare          (rule 40)

	num            shift, and enter state 44
	str            shift, and enter state 45
	id             shift, and enter state 76
	true           shift, and enter state 77
	false          shift, and enter state 78
	'('            shift, and enter state 49
	'+'            shift, and enter state 50
	'-'            shift, and enter state 51
	'!'            shift, and enter state 79

	Exp            goto state 74
	ExpCompare     goto state 129

State 89

	ExpCompare -> ExpCompare "||" . ExpCompare          (rule 41)

	num            shift, and enter state 44
	str            shift, and enter state 45
	id             shift, and enter state 76
	true           shift, and enter state 77
	false          shift, and enter state 78
	'('            shift, and enter state 49
	'+'            shift, and enter state 50
	'-'            shift, and enter state 51
	'!'            shift, and enter state 79

	Exp            goto state 74
	ExpCompare     goto state 128

State 90

	ExpCompare -> '!' '(' . ExpCompare ')'              (rule 42)

	num            shift, and enter state 44
	str            shift, and enter state 45
	id             shift, and enter state 76
	true           shift, and enter state 77
	false          shift, and enter state 78
	'('            shift, and enter state 49
	'+'            shift, and enter state 50
	'-'            shift, and enter state 51
	'!'            shift, and enter state 79

	Exp            goto state 74
	ExpCompare     goto state 127

State 91

	Exp -> id '(' . Exps ')'                            (rule 29)
	ExpCompare -> id '(' . Exps ')'                     (rule 45)

	num            shift, and enter state 44
	str            shift, and enter state 45
	id             shift, and enter state 46
	'('            shift, and enter state 49
	')'            reduce using rule 54
	'+'            shift, and enter state 50
	'-'            shift, and enter state 51
	','            reduce using rule 54

	Exp            goto state 42
	Exps           goto state 126

State 92

	Stm -> if '(' ExpCompare ')' . Stm else Stm         (rule 12)
	Stm -> if '(' ExpCompare ')' . Stm                  (rule 13)

	id             shift, and enter state 26
	return         shift, and enter state 27
	int            shift, and enter state 4
	bool           shift, and enter state 5
	string         shift, and enter state 6
	'{'            shift, and enter state 28
	if             shift, and enter state 30
	while          shift, and enter state 31
	printint       shift, and enter state 32
	printstr       shift, and enter state 33

	ReturnStm      goto state 23
	Stm            goto state 125
	Type           goto state 25

State 93

	ExpCompare -> Exp "==" . Exp                        (rule 34)

	num            shift, and enter state 44
	str            shift, and enter state 45
	id             shift, and enter state 46
	'('            shift, and enter state 49
	'+'            shift, and enter state 50
	'-'            shift, and enter state 51

	Exp            goto state 124

State 94

	ExpCompare -> Exp "!=" . Exp                        (rule 35)

	num            shift, and enter state 44
	str            shift, and enter state 45
	id             shift, and enter state 46
	'('            shift, and enter state 49
	'+'            shift, and enter state 50
	'-'            shift, and enter state 51

	Exp            goto state 123

State 95

	ExpCompare -> Exp "<" . Exp                         (rule 38)

	num            shift, and enter state 44
	str            shift, and enter state 45
	id             shift, and enter state 46
	'('            shift, and enter state 49
	'+'            shift, and enter state 50
	'-'            shift, and enter state 51

	Exp            goto state 122

State 96

	ExpCompare -> Exp ">" . Exp                         (rule 39)

	num            shift, and enter state 44
	str            shift, and enter state 45
	id             shift, and enter state 46
	'('            shift, and enter state 49
	'+'            shift, and enter state 50
	'-'            shift, and enter state 51

	Exp            goto state 121

State 97

	ExpCompare -> Exp ">=" . Exp                        (rule 37)

	num            shift, and enter state 44
	str            shift, and enter state 45
	id             shift, and enter state 46
	'('            shift, and enter state 49
	'+'            shift, and enter state 50
	'-'            shift, and enter state 51

	Exp            goto state 120

State 98

	ExpCompare -> Exp "<=" . Exp                        (rule 36)

	num            shift, and enter state 44
	str            shift, and enter state 45
	id             shift, and enter state 46
	'('            shift, and enter state 49
	'+'            shift, and enter state 50
	'-'            shift, and enter state 51

	Exp            goto state 119

State 99

	Exp -> Exp . '+' Exp                                (rule 24)
	Exp -> Exp . '-' Exp                                (rule 25)
	Exp -> Exp . '*' Exp                                (rule 26)
	Exp -> Exp . '/' Exp                                (rule 27)
	Exp -> Exp . '%' Exp                                (rule 28)
	Exp -> Exp '%' Exp .                                (rule 28)

	')'            reduce using rule 28
	'+'            reduce using rule 28
	'-'            reduce using rule 28
	'*'            reduce using rule 28
	'/'            reduce using rule 28
	'%'            reduce using rule 28
	';'            reduce using rule 28
	','            reduce using rule 28
	"=="           reduce using rule 28
	"!="           reduce using rule 28
	"<"            reduce using rule 28
	">"            reduce using rule 28
	">="           reduce using rule 28
	"<="           reduce using rule 28
	"&&"           reduce using rule 28
	"||"           reduce using rule 28


State 100

	Exp -> Exp . '+' Exp                                (rule 24)
	Exp -> Exp . '-' Exp                                (rule 25)
	Exp -> Exp . '*' Exp                                (rule 26)
	Exp -> Exp . '/' Exp                                (rule 27)
	Exp -> Exp '/' Exp .                                (rule 27)
	Exp -> Exp . '%' Exp                                (rule 28)

	')'            reduce using rule 27
	'+'            reduce using rule 27
	'-'            reduce using rule 27
	'*'            reduce using rule 27
	'/'            reduce using rule 27
	'%'            reduce using rule 27
	';'            reduce using rule 27
	','            reduce using rule 27
	"=="           reduce using rule 27
	"!="           reduce using rule 27
	"<"            reduce using rule 27
	">"            reduce using rule 27
	">="           reduce using rule 27
	"<="           reduce using rule 27
	"&&"           reduce using rule 27
	"||"           reduce using rule 27


State 101

	Exp -> Exp . '+' Exp                                (rule 24)
	Exp -> Exp . '-' Exp                                (rule 25)
	Exp -> Exp . '*' Exp                                (rule 26)
	Exp -> Exp '*' Exp .                                (rule 26)
	Exp -> Exp . '/' Exp                                (rule 27)
	Exp -> Exp . '%' Exp                                (rule 28)

	')'            reduce using rule 26
	'+'            reduce using rule 26
	'-'            reduce using rule 26
	'*'            reduce using rule 26
	'/'            reduce using rule 26
	'%'            reduce using rule 26
	';'            reduce using rule 26
	','            reduce using rule 26
	"=="           reduce using rule 26
	"!="           reduce using rule 26
	"<"            reduce using rule 26
	">"            reduce using rule 26
	">="           reduce using rule 26
	"<="           reduce using rule 26
	"&&"           reduce using rule 26
	"||"           reduce using rule 26


State 102

	Exp -> Exp . '+' Exp                                (rule 24)
	Exp -> Exp . '-' Exp                                (rule 25)
	Exp -> Exp '-' Exp .                                (rule 25)
	Exp -> Exp . '*' Exp                                (rule 26)
	Exp -> Exp . '/' Exp                                (rule 27)
	Exp -> Exp . '%' Exp                                (rule 28)

	')'            reduce using rule 25
	'+'            reduce using rule 25
	'-'            reduce using rule 25
	'*'            shift, and enter state 70
	'/'            shift, and enter state 71
	'%'            shift, and enter state 72
	';'            reduce using rule 25
	','            reduce using rule 25
	"=="           reduce using rule 25
	"!="           reduce using rule 25
	"<"            reduce using rule 25
	">"            reduce using rule 25
	">="           reduce using rule 25
	"<="           reduce using rule 25
	"&&"           reduce using rule 25
	"||"           reduce using rule 25


State 103

	Exp -> Exp . '+' Exp                                (rule 24)
	Exp -> Exp '+' Exp .                                (rule 24)
	Exp -> Exp . '-' Exp                                (rule 25)
	Exp -> Exp . '*' Exp                                (rule 26)
	Exp -> Exp . '/' Exp                                (rule 27)
	Exp -> Exp . '%' Exp                                (rule 28)

	')'            reduce using rule 24
	'+'            reduce using rule 24
	'-'            reduce using rule 24
	'*'            shift, and enter state 70
	'/'            shift, and enter state 71
	'%'            shift, and enter state 72
	';'            reduce using rule 24
	','            reduce using rule 24
	"=="           reduce using rule 24
	"!="           reduce using rule 24
	"<"            reduce using rule 24
	">"            reduce using rule 24
	">="           reduce using rule 24
	"<="           reduce using rule 24
	"&&"           reduce using rule 24
	"||"           reduce using rule 24


State 104

	Exp -> Exp . '+' Exp                                (rule 24)
	Exp -> Exp . '-' Exp                                (rule 25)
	Exp -> Exp . '*' Exp                                (rule 26)
	Exp -> Exp . '/' Exp                                (rule 27)
	Exp -> Exp . '%' Exp                                (rule 28)
	Exps -> Exps ',' Exp .                              (rule 56)

	')'            reduce using rule 56
	'+'            shift, and enter state 68
	'-'            shift, and enter state 69
	'*'            shift, and enter state 70
	'/'            shift, and enter state 71
	'%'            shift, and enter state 72
	';'            reduce using rule 56
	','            reduce using rule 56


State 105

	Exp -> id '-' '-' .                                 (rule 33)

	')'            reduce using rule 33
	'+'            reduce using rule 33
	'-'            reduce using rule 33
	'*'            reduce using rule 33
	'/'            reduce using rule 33
	'%'            reduce using rule 33
	';'            reduce using rule 33
	','            reduce using rule 33
	"=="           reduce using rule 33
	"!="           reduce using rule 33
	"<"            reduce using rule 33
	">"            reduce using rule 33
	">="           reduce using rule 33
	"<="           reduce using rule 33
	"&&"           reduce using rule 33
	"||"           reduce using rule 33


State 106

	Exp -> id '+' '+' .                                 (rule 31)

	')'            reduce using rule 31
	'+'            reduce using rule 31
	'-'            reduce using rule 31
	'*'            reduce using rule 31
	'/'            reduce using rule 31
	'%'            reduce using rule 31
	';'            reduce using rule 31
	','            reduce using rule 31
	"=="           reduce using rule 31
	"!="           reduce using rule 31
	"<"            reduce using rule 31
	">"            reduce using rule 31
	">="           reduce using rule 31
	"<="           reduce using rule 31
	"&&"           reduce using rule 31
	"||"           reduce using rule 31


State 107

	Exp -> id '(' Exps . ')'                            (rule 29)
	Exps -> Exps . ',' Exp                              (rule 56)

	')'            shift, and enter state 118
	','            shift, and enter state 67


State 108

	Exp -> '(' Exp ')' .                                (rule 23)

	')'            reduce using rule 23
	'+'            reduce using rule 23
	'-'            reduce using rule 23
	'*'            reduce using rule 23
	'/'            reduce using rule 23
	'%'            reduce using rule 23
	';'            reduce using rule 23
	','            reduce using rule 23
	"=="           reduce using rule 23
	"!="           reduce using rule 23
	"<"            reduce using rule 23
	">"            reduce using rule 23
	">="           reduce using rule 23
	"<="           reduce using rule 23
	"&&"           reduce using rule 23
	"||"           reduce using rule 23


State 109

	Exp -> '+' '+' id .                                 (rule 30)

	')'            reduce using rule 30
	'+'            reduce using rule 30
	'-'            reduce using rule 30
	'*'            reduce using rule 30
	'/'            reduce using rule 30
	'%'            reduce using rule 30
	';'            reduce using rule 30
	','            reduce using rule 30
	"=="           reduce using rule 30
	"!="           reduce using rule 30
	"<"            reduce using rule 30
	">"            reduce using rule 30
	">="           reduce using rule 30
	"<="           reduce using rule 30
	"&&"           reduce using rule 30
	"||"           reduce using rule 30


State 110

	Exp -> '-' '-' id .                                 (rule 32)

	')'            reduce using rule 32
	'+'            reduce using rule 32
	'-'            reduce using rule 32
	'*'            reduce using rule 32
	'/'            reduce using rule 32
	'%'            reduce using rule 32
	';'            reduce using rule 32
	','            reduce using rule 32
	"=="           reduce using rule 32
	"!="           reduce using rule 32
	"<"            reduce using rule 32
	">"            reduce using rule 32
	">="           reduce using rule 32
	"<="           reduce using rule 32
	"&&"           reduce using rule 32
	"||"           reduce using rule 32


State 111

	Stm -> id '(' Exps ')' . ';'                        (rule 17)

	';'            shift, and enter state 117


State 112

	Stm -> id '=' scanint '(' . ')' ';'                 (rule 9)

	')'            shift, and enter state 116


State 113

	Stm -> id '=' Exp ';' .                             (rule 8)

	id             reduce using rule 8
	return         reduce using rule 8
	int            reduce using rule 8
	bool           reduce using rule 8
	string         reduce using rule 8
	'{'            reduce using rule 8
	'}'            reduce using rule 8
	if             reduce using rule 8
	else           reduce using rule 8
	while          reduce using rule 8
	printint       reduce using rule 8
	printstr       reduce using rule 8


State 114

	Stm -> Type id '=' Exp . ';'                        (rule 11)
	Exp -> Exp . '+' Exp                                (rule 24)
	Exp -> Exp . '-' Exp                                (rule 25)
	Exp -> Exp . '*' Exp                                (rule 26)
	Exp -> Exp . '/' Exp                                (rule 27)
	Exp -> Exp . '%' Exp                                (rule 28)

	'+'            shift, and enter state 68
	'-'            shift, and enter state 69
	'*'            shift, and enter state 70
	'/'            shift, and enter state 71
	'%'            shift, and enter state 72
	';'            shift, and enter state 115


State 115

	Stm -> Type id '=' Exp ';' .                        (rule 11)

	id             reduce using rule 11
	return         reduce using rule 11
	int            reduce using rule 11
	bool           reduce using rule 11
	string         reduce using rule 11
	'{'            reduce using rule 11
	'}'            reduce using rule 11
	if             reduce using rule 11
	else           reduce using rule 11
	while          reduce using rule 11
	printint       reduce using rule 11
	printstr       reduce using rule 11


State 116

	Stm -> id '=' scanint '(' ')' . ';'                 (rule 9)

	';'            shift, and enter state 136


State 117

	Stm -> id '(' Exps ')' ';' .                        (rule 17)

	id             reduce using rule 17
	return         reduce using rule 17
	int            reduce using rule 17
	bool           reduce using rule 17
	string         reduce using rule 17
	'{'            reduce using rule 17
	'}'            reduce using rule 17
	if             reduce using rule 17
	else           reduce using rule 17
	while          reduce using rule 17
	printint       reduce using rule 17
	printstr       reduce using rule 17


State 118

	Exp -> id '(' Exps ')' .                            (rule 29)

	')'            reduce using rule 29
	'+'            reduce using rule 29
	'-'            reduce using rule 29
	'*'            reduce using rule 29
	'/'            reduce using rule 29
	'%'            reduce using rule 29
	';'            reduce using rule 29
	','            reduce using rule 29
	"=="           reduce using rule 29
	"!="           reduce using rule 29
	"<"            reduce using rule 29
	">"            reduce using rule 29
	">="           reduce using rule 29
	"<="           reduce using rule 29
	"&&"           reduce using rule 29
	"||"           reduce using rule 29


State 119

	Exp -> Exp . '+' Exp                                (rule 24)
	Exp -> Exp . '-' Exp                                (rule 25)
	Exp -> Exp . '*' Exp                                (rule 26)
	Exp -> Exp . '/' Exp                                (rule 27)
	Exp -> Exp . '%' Exp                                (rule 28)
	ExpCompare -> Exp "<=" Exp .                        (rule 36)

	')'            reduce using rule 36
	'+'            shift, and enter state 68
	'-'            shift, and enter state 69
	'*'            shift, and enter state 70
	'/'            shift, and enter state 71
	'%'            shift, and enter state 72
	"&&"           reduce using rule 36
	"||"           reduce using rule 36


State 120

	Exp -> Exp . '+' Exp                                (rule 24)
	Exp -> Exp . '-' Exp                                (rule 25)
	Exp -> Exp . '*' Exp                                (rule 26)
	Exp -> Exp . '/' Exp                                (rule 27)
	Exp -> Exp . '%' Exp                                (rule 28)
	ExpCompare -> Exp ">=" Exp .                        (rule 37)

	')'            reduce using rule 37
	'+'            shift, and enter state 68
	'-'            shift, and enter state 69
	'*'            shift, and enter state 70
	'/'            shift, and enter state 71
	'%'            shift, and enter state 72
	"&&"           reduce using rule 37
	"||"           reduce using rule 37


State 121

	Exp -> Exp . '+' Exp                                (rule 24)
	Exp -> Exp . '-' Exp                                (rule 25)
	Exp -> Exp . '*' Exp                                (rule 26)
	Exp -> Exp . '/' Exp                                (rule 27)
	Exp -> Exp . '%' Exp                                (rule 28)
	ExpCompare -> Exp ">" Exp .                         (rule 39)

	')'            reduce using rule 39
	'+'            shift, and enter state 68
	'-'            shift, and enter state 69
	'*'            shift, and enter state 70
	'/'            shift, and enter state 71
	'%'            shift, and enter state 72
	"&&"           reduce using rule 39
	"||"           reduce using rule 39


State 122

	Exp -> Exp . '+' Exp                                (rule 24)
	Exp -> Exp . '-' Exp                                (rule 25)
	Exp -> Exp . '*' Exp                                (rule 26)
	Exp -> Exp . '/' Exp                                (rule 27)
	Exp -> Exp . '%' Exp                                (rule 28)
	ExpCompare -> Exp "<" Exp .                         (rule 38)

	')'            reduce using rule 38
	'+'            shift, and enter state 68
	'-'            shift, and enter state 69
	'*'            shift, and enter state 70
	'/'            shift, and enter state 71
	'%'            shift, and enter state 72
	"&&"           reduce using rule 38
	"||"           reduce using rule 38


State 123

	Exp -> Exp . '+' Exp                                (rule 24)
	Exp -> Exp . '-' Exp                                (rule 25)
	Exp -> Exp . '*' Exp                                (rule 26)
	Exp -> Exp . '/' Exp                                (rule 27)
	Exp -> Exp . '%' Exp                                (rule 28)
	ExpCompare -> Exp "!=" Exp .                        (rule 35)

	')'            reduce using rule 35
	'+'            shift, and enter state 68
	'-'            shift, and enter state 69
	'*'            shift, and enter state 70
	'/'            shift, and enter state 71
	'%'            shift, and enter state 72
	"&&"           reduce using rule 35
	"||"           reduce using rule 35


State 124

	Exp -> Exp . '+' Exp                                (rule 24)
	Exp -> Exp . '-' Exp                                (rule 25)
	Exp -> Exp . '*' Exp                                (rule 26)
	Exp -> Exp . '/' Exp                                (rule 27)
	Exp -> Exp . '%' Exp                                (rule 28)
	ExpCompare -> Exp "==" Exp .                        (rule 34)

	')'            reduce using rule 34
	'+'            shift, and enter state 68
	'-'            shift, and enter state 69
	'*'            shift, and enter state 70
	'/'            shift, and enter state 71
	'%'            shift, and enter state 72
	"&&"           reduce using rule 34
	"||"           reduce using rule 34


State 125

	Stm -> if '(' ExpCompare ')' Stm . else Stm         (rule 12)
	Stm -> if '(' ExpCompare ')' Stm .                  (rule 13)

	id             reduce using rule 13
	return         reduce using rule 13
	int            reduce using rule 13
	bool           reduce using rule 13
	string         reduce using rule 13
	'{'            reduce using rule 13
	'}'            reduce using rule 13
	if             reduce using rule 13
	else           shift, and enter state 135
			(reduce using rule 13)

	while          reduce using rule 13
	printint       reduce using rule 13
	printstr       reduce using rule 13


State 126

	Exp -> id '(' Exps . ')'                            (rule 29)
	ExpCompare -> id '(' Exps . ')'                     (rule 45)
	Exps -> Exps . ',' Exp                              (rule 56)

	')'            shift, and enter state 134
	','            shift, and enter state 67


State 127

	ExpCompare -> ExpCompare . "&&" ExpCompare          (rule 40)
	ExpCompare -> ExpCompare . "||" ExpCompare          (rule 41)
	ExpCompare -> '!' '(' ExpCompare . ')'              (rule 42)

	')'            shift, and enter state 133
	"&&"           shift, and enter state 88
	"||"           shift, and enter state 89


State 128

	ExpCompare -> ExpCompare . "&&" ExpCompare          (rule 40)
	ExpCompare -> ExpCompare . "||" ExpCompare          (rule 41)
	ExpCompare -> ExpCompare "||" ExpCompare .          (rule 41)

	')'            reduce using rule 41
	"&&"           reduce using rule 41
	"||"           reduce using rule 41


State 129

	ExpCompare -> ExpCompare . "&&" ExpCompare          (rule 40)
	ExpCompare -> ExpCompare "&&" ExpCompare .          (rule 40)
	ExpCompare -> ExpCompare . "||" ExpCompare          (rule 41)

	')'            reduce using rule 40
	"&&"           reduce using rule 40
	"||"           reduce using rule 40


State 130

	Stm -> while '(' ExpCompare ')' Stm .               (rule 14)

	id             reduce using rule 14
	return         reduce using rule 14
	int            reduce using rule 14
	bool           reduce using rule 14
	string         reduce using rule 14
	'{'            reduce using rule 14
	'}'            reduce using rule 14
	if             reduce using rule 14
	else           reduce using rule 14
	while          reduce using rule 14
	printint       reduce using rule 14
	printstr       reduce using rule 14


State 131

	Stm -> printint '(' Exp ')' ';' .                   (rule 18)

	id             reduce using rule 18
	return         reduce using rule 18
	int            reduce using rule 18
	bool           reduce using rule 18
	string         reduce using rule 18
	'{'            reduce using rule 18
	'}'            reduce using rule 18
	if             reduce using rule 18
	else           reduce using rule 18
	while          reduce using rule 18
	printint       reduce using rule 18
	printstr       reduce using rule 18


State 132

	Stm -> printstr '(' str ')' ';' .                   (rule 19)

	id             reduce using rule 19
	return         reduce using rule 19
	int            reduce using rule 19
	bool           reduce using rule 19
	string         reduce using rule 19
	'{'            reduce using rule 19
	'}'            reduce using rule 19
	if             reduce using rule 19
	else           reduce using rule 19
	while          reduce using rule 19
	printint       reduce using rule 19
	printstr       reduce using rule 19


State 133

	ExpCompare -> '!' '(' ExpCompare ')' .              (rule 42)

	')'            reduce using rule 42
	"&&"           reduce using rule 42
	"||"           reduce using rule 42


State 134

	Exp -> id '(' Exps ')' .                            (rule 29)
	ExpCompare -> id '(' Exps ')' .                     (rule 45)

	')'            reduce using rule 45
	'+'            reduce using rule 29
	'-'            reduce using rule 29
	'*'            reduce using rule 29
	'/'            reduce using rule 29
	'%'            reduce using rule 29
	"=="           reduce using rule 29
	"!="           reduce using rule 29
	"<"            reduce using rule 29
	">"            reduce using rule 29
	">="           reduce using rule 29
	"<="           reduce using rule 29
	"&&"           reduce using rule 45
	"||"           reduce using rule 45


State 135

	Stm -> if '(' ExpCompare ')' Stm else . Stm         (rule 12)

	id             shift, and enter state 26
	return         shift, and enter state 27
	int            shift, and enter state 4
	bool           shift, and enter state 5
	string         shift, and enter state 6
	'{'            shift, and enter state 28
	if             shift, and enter state 30
	while          shift, and enter state 31
	printint       shift, and enter state 32
	printstr       shift, and enter state 33

	ReturnStm      goto state 23
	Stm            goto state 137
	Type           goto state 25

State 136

	Stm -> id '=' scanint '(' ')' ';' .                 (rule 9)

	id             reduce using rule 9
	return         reduce using rule 9
	int            reduce using rule 9
	bool           reduce using rule 9
	string         reduce using rule 9
	'{'            reduce using rule 9
	'}'            reduce using rule 9
	if             reduce using rule 9
	else           reduce using rule 9
	while          reduce using rule 9
	printint       reduce using rule 9
	printstr       reduce using rule 9


State 137

	Stm -> if '(' ExpCompare ')' Stm else Stm .         (rule 12)

	id             reduce using rule 12
	return         reduce using rule 12
	int            reduce using rule 12
	bool           reduce using rule 12
	string         reduce using rule 12
	'{'            reduce using rule 12
	'}'            reduce using rule 12
	if             reduce using rule 12
	else           reduce using rule 12
	while          reduce using rule 12
	printint       reduce using rule 12
	printstr       reduce using rule 12


-----------------------------------------------------------------------------
Grammar Totals
-----------------------------------------------------------------------------
Number of rules: 57
Number of terminals: 37
Number of non-terminals: 11
Number of states: 138
