-----------------------------------------------------------------------------
Info file generated by Happy Version 1.19.11 from ParserC0.y
-----------------------------------------------------------------------------

state 50 contains 1 reduce/reduce conflicts.
state 51 contains 1 reduce/reduce conflicts.
state 125 contains 1 shift/reduce conflicts.

rule 6 is unused
rule 7 is unused

terminal break is unused
terminal continue is unused

-----------------------------------------------------------------------------
Grammar
-----------------------------------------------------------------------------
	%start_parserC0 -> Funcs                           (0)
	Funcs -> Func                                      (1)
	Funcs -> Funcs Func                                (2)
	Func -> Type id '(' Decl ')' '{' Stmts ReturnStm ';' '}'   (3)
	Func -> Type main '(' ')' '{' Stmts '}'            (4)
	ReturnStm -> return Exps                           (5)
	ReturnStm -> return true                           (6)
	ReturnStm -> return false                          (7)
	Stm -> OpStm                                       (8)
	Stm -> if '(' ExpCompare ')' Stm else Stm          (9)
	Stm -> if '(' ExpCompare ')' Stm                   (10)
	Stm -> for '(' OpFor ExpCompare ';' Op ')' Stm     (11)
	Stm -> while '(' ExpCompare ')' Stm                (12)
	Stm -> '{' Stmts '}'                               (13)
	Stm -> ReturnStm ';'                               (14)
	Stm -> id '(' Exps ')' ';'                         (15)
	Stm -> print_int '(' Exp ')' ';'                   (16)
	Stm -> print_str '(' str ')' ';'                   (17)
	Exp -> num                                         (18)
	Exp -> str                                         (19)
	Exp -> id                                          (20)
	Exp -> '(' Exp ')'                                 (21)
	Exp -> Exp '+' Exp                                 (22)
	Exp -> Exp '-' Exp                                 (23)
	Exp -> Exp '*' Exp                                 (24)
	Exp -> Exp '/' Exp                                 (25)
	Exp -> Exp '%' Exp                                 (26)
	Exp -> id '(' Exps ')'                             (27)
	Exp -> true                                        (28)
	Exp -> false                                       (29)
	Op -> "++" id                                      (30)
	Op -> id "++"                                      (31)
	Op -> "--" id                                      (32)
	Op -> id "--"                                      (33)
	Op -> id '=' Exp                                   (34)
	OpStm -> id '=' Exp ';'                            (35)
	OpStm -> id '=' scan_int '(' ')' ';'               (36)
	OpStm -> Type id ';'                               (37)
	OpStm -> Type id '=' Exp ';'                       (38)
	OpFor -> ';'                                       (39)
	OpFor -> id '=' Exp ';'                            (40)
	OpFor -> Type id '=' Exp ';'                       (41)
	ExpCompare -> Exp "==" Exp                         (42)
	ExpCompare -> Exp "!=" Exp                         (43)
	ExpCompare -> Exp "<=" Exp                         (44)
	ExpCompare -> Exp ">=" Exp                         (45)
	ExpCompare -> Exp "<" Exp                          (46)
	ExpCompare -> Exp ">" Exp                          (47)
	ExpCompare -> ExpCompare "&&" ExpCompare           (48)
	ExpCompare -> ExpCompare "||" ExpCompare           (49)
	ExpCompare -> '!' '(' ExpCompare ')'               (50)
	ExpCompare -> id '(' Exps ')'                      (51)
	Stmts ->                                           (52)
	Stmts -> Stmts Stm                                 (53)
	Type -> int                                        (54)
	Type -> bool                                       (55)
	Type -> string                                     (56)
	Decl ->                                            (57)
	Decl -> Type id                                    (58)
	Decl -> Decl ',' Type id                           (59)
	Exps ->                                            (60)
	Exps -> Exp                                        (61)
	Exps -> Exps ',' Exp                               (62)

-----------------------------------------------------------------------------
Terminals
-----------------------------------------------------------------------------
	num            { NUM_TOK $$ }
	str            { STRING_TOK $$ }
	id             { VAR_TOK $$ }
	true           { TRUE_TOK $$ }
	false          { FALSE_TOK $$ }
	return         { RETURN_TOK }
	main           { MAIN_TOK }
	break          { BREAK_TOK }
	continue       { CONTINUE_TOK }
	int            { INT_DEF_TOK }
	bool           { BOOL_DEF_TOK }
	string         { STRING_DEF_TOK }
	'('            { LPAREN_TOK }
	')'            { RPAREN_TOK }
	'='            { ASSIGN_TOK }
	'{'            { LBRACE_TOK }
	'}'            { RBRACE_TOK }
	'+'            { PLUS_TOK }
	'-'            { MINUS_TOK }
	'*'            { MULT_TOK }
	'/'            { DIV_TOK }
	'%'            { MOD_TOK }
	';'            { SEMICOLON_TOK }
	','            { COLON_TOK }
	"++"           { INCR_TOK }
	"--"           { DECR_TOK }
	"=="           { EQUAL_TOK }
	"!="           { NEQUAL_TOK }
	"<"            { LTHEN_TOK }
	">"            { GTHEN_TOK }
	">="           { GTOE_TOK }
	"<="           { LTOE_TOK }
	"&&"           { AND_TOK }
	"||"           { OR_TOK }
	'!'            { NOT_TOK }
	if             { IF_TOK }
	else           { ELSE_TOK }
	while          { WHILE_TOK }
	for            { FOR_TOK }
	print_int      { PRINTINT_TOK }
	scan_int       { SCANINT_TOK }
	print_str      { PRINTSTR_TOK }

-----------------------------------------------------------------------------
Non-terminals
-----------------------------------------------------------------------------
	%start_parserC0 rule  0
	Funcs           rules 1, 2
	Func            rules 3, 4
	ReturnStm       rules 5, 6, 7
	Stm             rules 8, 9, 10, 11, 12, 13, 14, 15, 16, 17
	Exp             rules 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29
	Op              rules 30, 31, 32, 33, 34
	OpStm           rules 35, 36, 37, 38
	OpFor           rules 39, 40, 41
	ExpCompare      rules 42, 43, 44, 45, 46, 47, 48, 49, 50, 51
	Stmts           rules 52, 53
	Type            rules 54, 55, 56
	Decl            rules 57, 58, 59
	Exps            rules 60, 61, 62

-----------------------------------------------------------------------------
States
-----------------------------------------------------------------------------
State 0


	int            shift, and enter state 4
	bool           shift, and enter state 5
	string         shift, and enter state 6

	Funcs          goto state 7
	Func           goto state 2
	Type           goto state 3

State 1


	int            shift, and enter state 4
	bool           shift, and enter state 5
	string         shift, and enter state 6

	Func           goto state 2
	Type           goto state 3

State 2

	Funcs -> Func .                                     (rule 1)

	int            reduce using rule 1
	bool           reduce using rule 1
	string         reduce using rule 1
	%eof           reduce using rule 1


State 3

	Func -> Type . id '(' Decl ')' '{' Stmts ReturnStm ';' '}'    (rule 3)
	Func -> Type . main '(' ')' '{' Stmts '}'           (rule 4)

	id             shift, and enter state 9
	main           shift, and enter state 10


State 4

	Type -> int .                                       (rule 54)

	id             reduce using rule 54
	main           reduce using rule 54


State 5

	Type -> bool .                                      (rule 55)

	id             reduce using rule 55
	main           reduce using rule 55


State 6

	Type -> string .                                    (rule 56)

	id             reduce using rule 56
	main           reduce using rule 56


State 7

	%start_parserC0 -> Funcs .                          (rule 0)
	Funcs -> Funcs . Func                               (rule 2)

	int            shift, and enter state 4
	bool           shift, and enter state 5
	string         shift, and enter state 6
	%eof           accept

	Func           goto state 8
	Type           goto state 3

State 8

	Funcs -> Funcs Func .                               (rule 2)

	int            reduce using rule 2
	bool           reduce using rule 2
	string         reduce using rule 2
	%eof           reduce using rule 2


State 9

	Func -> Type id . '(' Decl ')' '{' Stmts ReturnStm ';' '}'    (rule 3)

	'('            shift, and enter state 12


State 10

	Func -> Type main . '(' ')' '{' Stmts '}'           (rule 4)

	'('            shift, and enter state 11


State 11

	Func -> Type main '(' . ')' '{' Stmts '}'           (rule 4)

	')'            shift, and enter state 15


State 12

	Func -> Type id '(' . Decl ')' '{' Stmts ReturnStm ';' '}'    (rule 3)

	int            shift, and enter state 4
	bool           shift, and enter state 5
	string         shift, and enter state 6
	')'            reduce using rule 57
	','            reduce using rule 57

	Type           goto state 13
	Decl           goto state 14

State 13

	Decl -> Type . id                                   (rule 58)

	id             shift, and enter state 19


State 14

	Func -> Type id '(' Decl . ')' '{' Stmts ReturnStm ';' '}'    (rule 3)
	Decl -> Decl . ',' Type id                          (rule 59)

	')'            shift, and enter state 17
	','            shift, and enter state 18


State 15

	Func -> Type main '(' ')' . '{' Stmts '}'           (rule 4)

	'{'            shift, and enter state 16


State 16

	Func -> Type main '(' ')' '{' . Stmts '}'           (rule 4)

	id             reduce using rule 52
	return         reduce using rule 52
	int            reduce using rule 52
	bool           reduce using rule 52
	string         reduce using rule 52
	'{'            reduce using rule 52
	'}'            reduce using rule 52
	if             reduce using rule 52
	while          reduce using rule 52
	for            reduce using rule 52
	print_int      reduce using rule 52
	print_str      reduce using rule 52

	Stmts          goto state 22

State 17

	Func -> Type id '(' Decl ')' . '{' Stmts ReturnStm ';' '}'    (rule 3)

	'{'            shift, and enter state 21


State 18

	Decl -> Decl ',' . Type id                          (rule 59)

	int            shift, and enter state 4
	bool           shift, and enter state 5
	string         shift, and enter state 6

	Type           goto state 20

State 19

	Decl -> Type id .                                   (rule 58)

	')'            reduce using rule 58
	','            reduce using rule 58


State 20

	Decl -> Decl ',' Type . id                          (rule 59)

	id             shift, and enter state 37


State 21

	Func -> Type id '(' Decl ')' '{' . Stmts ReturnStm ';' '}'    (rule 3)

	id             reduce using rule 52
	return         reduce using rule 52
	int            reduce using rule 52
	bool           reduce using rule 52
	string         reduce using rule 52
	'{'            reduce using rule 52
	if             reduce using rule 52
	while          reduce using rule 52
	for            reduce using rule 52
	print_int      reduce using rule 52
	print_str      reduce using rule 52

	Stmts          goto state 36

State 22

	Func -> Type main '(' ')' '{' Stmts . '}'           (rule 4)
	Stmts -> Stmts . Stm                                (rule 53)

	id             shift, and enter state 27
	return         shift, and enter state 28
	int            shift, and enter state 4
	bool           shift, and enter state 5
	string         shift, and enter state 6
	'{'            shift, and enter state 29
	'}'            shift, and enter state 30
	if             shift, and enter state 31
	while          shift, and enter state 32
	for            shift, and enter state 33
	print_int      shift, and enter state 34
	print_str      shift, and enter state 35

	ReturnStm      goto state 23
	Stm            goto state 24
	OpStm          goto state 25
	Type           goto state 26

State 23

	Stm -> ReturnStm . ';'                              (rule 14)

	';'            shift, and enter state 56


State 24

	Stmts -> Stmts Stm .                                (rule 53)

	id             reduce using rule 53
	return         reduce using rule 53
	int            reduce using rule 53
	bool           reduce using rule 53
	string         reduce using rule 53
	'{'            reduce using rule 53
	'}'            reduce using rule 53
	if             reduce using rule 53
	while          reduce using rule 53
	for            reduce using rule 53
	print_int      reduce using rule 53
	print_str      reduce using rule 53


State 25

	Stm -> OpStm .                                      (rule 8)

	id             reduce using rule 8
	return         reduce using rule 8
	int            reduce using rule 8
	bool           reduce using rule 8
	string         reduce using rule 8
	'{'            reduce using rule 8
	'}'            reduce using rule 8
	if             reduce using rule 8
	else           reduce using rule 8
	while          reduce using rule 8
	for            reduce using rule 8
	print_int      reduce using rule 8
	print_str      reduce using rule 8


State 26

	OpStm -> Type . id ';'                              (rule 37)
	OpStm -> Type . id '=' Exp ';'                      (rule 38)

	id             shift, and enter state 55


State 27

	Stm -> id . '(' Exps ')' ';'                        (rule 15)
	OpStm -> id . '=' Exp ';'                           (rule 35)
	OpStm -> id . '=' scan_int '(' ')' ';'              (rule 36)

	'('            shift, and enter state 53
	'='            shift, and enter state 54


State 28

	ReturnStm -> return . Exps                          (rule 5)
	ReturnStm -> return . true                          (rule 6)
	ReturnStm -> return . false                         (rule 7)

	num            shift, and enter state 47
	str            shift, and enter state 48
	id             shift, and enter state 49
	true           shift, and enter state 50
	false          shift, and enter state 51
	'('            shift, and enter state 52
	';'            reduce using rule 60
	','            reduce using rule 60

	Exp            goto state 45
	Exps           goto state 46

State 29

	Stm -> '{' . Stmts '}'                              (rule 13)

	id             reduce using rule 52
	return         reduce using rule 52
	int            reduce using rule 52
	bool           reduce using rule 52
	string         reduce using rule 52
	'{'            reduce using rule 52
	'}'            reduce using rule 52
	if             reduce using rule 52
	while          reduce using rule 52
	for            reduce using rule 52
	print_int      reduce using rule 52
	print_str      reduce using rule 52

	Stmts          goto state 44

State 30

	Func -> Type main '(' ')' '{' Stmts '}' .           (rule 4)

	int            reduce using rule 4
	bool           reduce using rule 4
	string         reduce using rule 4
	%eof           reduce using rule 4


State 31

	Stm -> if . '(' ExpCompare ')' Stm else Stm         (rule 9)
	Stm -> if . '(' ExpCompare ')' Stm                  (rule 10)

	'('            shift, and enter state 43


State 32

	Stm -> while . '(' ExpCompare ')' Stm               (rule 12)

	'('            shift, and enter state 42


State 33

	Stm -> for . '(' OpFor ExpCompare ';' Op ')' Stm    (rule 11)

	'('            shift, and enter state 41


State 34

	Stm -> print_int . '(' Exp ')' ';'                  (rule 16)

	'('            shift, and enter state 40


State 35

	Stm -> print_str . '(' str ')' ';'                  (rule 17)

	'('            shift, and enter state 39


State 36

	Func -> Type id '(' Decl ')' '{' Stmts . ReturnStm ';' '}'    (rule 3)
	Stmts -> Stmts . Stm                                (rule 53)

	id             shift, and enter state 27
	return         shift, and enter state 28
	int            shift, and enter state 4
	bool           shift, and enter state 5
	string         shift, and enter state 6
	'{'            shift, and enter state 29
	if             shift, and enter state 31
	while          shift, and enter state 32
	for            shift, and enter state 33
	print_int      shift, and enter state 34
	print_str      shift, and enter state 35

	ReturnStm      goto state 38
	Stm            goto state 24
	OpStm          goto state 25
	Type           goto state 26

State 37

	Decl -> Decl ',' Type id .                          (rule 59)

	')'            reduce using rule 59
	','            reduce using rule 59


State 38

	Func -> Type id '(' Decl ')' '{' Stmts ReturnStm . ';' '}'    (rule 3)
	Stm -> ReturnStm . ';'                              (rule 14)

	';'            shift, and enter state 84


State 39

	Stm -> print_str '(' . str ')' ';'                  (rule 17)

	str            shift, and enter state 83


State 40

	Stm -> print_int '(' . Exp ')' ';'                  (rule 16)

	num            shift, and enter state 47
	str            shift, and enter state 48
	id             shift, and enter state 49
	true           shift, and enter state 60
	false          shift, and enter state 61
	'('            shift, and enter state 52

	Exp            goto state 82

State 41

	Stm -> for '(' . OpFor ExpCompare ';' Op ')' Stm    (rule 11)

	id             shift, and enter state 80
	int            shift, and enter state 4
	bool           shift, and enter state 5
	string         shift, and enter state 6
	';'            shift, and enter state 81

	OpFor          goto state 78
	Type           goto state 79

State 42

	Stm -> while '(' . ExpCompare ')' Stm               (rule 12)

	num            shift, and enter state 47
	str            shift, and enter state 48
	id             shift, and enter state 75
	true           shift, and enter state 60
	false          shift, and enter state 61
	'('            shift, and enter state 52
	'!'            shift, and enter state 76

	Exp            goto state 73
	ExpCompare     goto state 77

State 43

	Stm -> if '(' . ExpCompare ')' Stm else Stm         (rule 9)
	Stm -> if '(' . ExpCompare ')' Stm                  (rule 10)

	num            shift, and enter state 47
	str            shift, and enter state 48
	id             shift, and enter state 75
	true           shift, and enter state 60
	false          shift, and enter state 61
	'('            shift, and enter state 52
	'!'            shift, and enter state 76

	Exp            goto state 73
	ExpCompare     goto state 74

State 44

	Stm -> '{' Stmts . '}'                              (rule 13)
	Stmts -> Stmts . Stm                                (rule 53)

	id             shift, and enter state 27
	return         shift, and enter state 28
	int            shift, and enter state 4
	bool           shift, and enter state 5
	string         shift, and enter state 6
	'{'            shift, and enter state 29
	'}'            shift, and enter state 72
	if             shift, and enter state 31
	while          shift, and enter state 32
	for            shift, and enter state 33
	print_int      shift, and enter state 34
	print_str      shift, and enter state 35

	ReturnStm      goto state 23
	Stm            goto state 24
	OpStm          goto state 25
	Type           goto state 26

State 45

	Exp -> Exp . '+' Exp                                (rule 22)
	Exp -> Exp . '-' Exp                                (rule 23)
	Exp -> Exp . '*' Exp                                (rule 24)
	Exp -> Exp . '/' Exp                                (rule 25)
	Exp -> Exp . '%' Exp                                (rule 26)
	Exps -> Exp .                                       (rule 61)

	')'            reduce using rule 61
	'+'            shift, and enter state 67
	'-'            shift, and enter state 68
	'*'            shift, and enter state 69
	'/'            shift, and enter state 70
	'%'            shift, and enter state 71
	';'            reduce using rule 61
	','            reduce using rule 61


State 46

	ReturnStm -> return Exps .                          (rule 5)
	Exps -> Exps . ',' Exp                              (rule 62)

	';'            reduce using rule 5
	','            shift, and enter state 66


State 47

	Exp -> num .                                        (rule 18)

	')'            reduce using rule 18
	'+'            reduce using rule 18
	'-'            reduce using rule 18
	'*'            reduce using rule 18
	'/'            reduce using rule 18
	'%'            reduce using rule 18
	';'            reduce using rule 18
	','            reduce using rule 18
	"=="           reduce using rule 18
	"!="           reduce using rule 18
	"<"            reduce using rule 18
	">"            reduce using rule 18
	">="           reduce using rule 18
	"<="           reduce using rule 18
	"&&"           reduce using rule 18
	"||"           reduce using rule 18


State 48

	Exp -> str .                                        (rule 19)

	')'            reduce using rule 19
	'+'            reduce using rule 19
	'-'            reduce using rule 19
	'*'            reduce using rule 19
	'/'            reduce using rule 19
	'%'            reduce using rule 19
	';'            reduce using rule 19
	','            reduce using rule 19
	"=="           reduce using rule 19
	"!="           reduce using rule 19
	"<"            reduce using rule 19
	">"            reduce using rule 19
	">="           reduce using rule 19
	"<="           reduce using rule 19
	"&&"           reduce using rule 19
	"||"           reduce using rule 19


State 49

	Exp -> id .                                         (rule 20)
	Exp -> id . '(' Exps ')'                            (rule 27)

	'('            shift, and enter state 65
	')'            reduce using rule 20
	'+'            reduce using rule 20
	'-'            reduce using rule 20
	'*'            reduce using rule 20
	'/'            reduce using rule 20
	'%'            reduce using rule 20
	';'            reduce using rule 20
	','            reduce using rule 20
	"=="           reduce using rule 20
	"!="           reduce using rule 20
	"<"            reduce using rule 20
	">"            reduce using rule 20
	">="           reduce using rule 20
	"<="           reduce using rule 20
	"&&"           reduce using rule 20
	"||"           reduce using rule 20


State 50

	ReturnStm -> return true .                          (rule 6)
	Exp -> true .                                       (rule 28)

	'+'            reduce using rule 28
	'-'            reduce using rule 28
	'*'            reduce using rule 28
	'/'            reduce using rule 28
	'%'            reduce using rule 28
	';'            reduce using rule 28
			(reduce using rule 6)

	','            reduce using rule 28


State 51

	ReturnStm -> return false .                         (rule 7)
	Exp -> false .                                      (rule 29)

	'+'            reduce using rule 29
	'-'            reduce using rule 29
	'*'            reduce using rule 29
	'/'            reduce using rule 29
	'%'            reduce using rule 29
	';'            reduce using rule 29
			(reduce using rule 7)

	','            reduce using rule 29


State 52

	Exp -> '(' . Exp ')'                                (rule 21)

	num            shift, and enter state 47
	str            shift, and enter state 48
	id             shift, and enter state 49
	true           shift, and enter state 60
	false          shift, and enter state 61
	'('            shift, and enter state 52

	Exp            goto state 64

State 53

	Stm -> id '(' . Exps ')' ';'                        (rule 15)

	num            shift, and enter state 47
	str            shift, and enter state 48
	id             shift, and enter state 49
	true           shift, and enter state 60
	false          shift, and enter state 61
	'('            shift, and enter state 52
	')'            reduce using rule 60
	','            reduce using rule 60

	Exp            goto state 45
	Exps           goto state 63

State 54

	OpStm -> id '=' . Exp ';'                           (rule 35)
	OpStm -> id '=' . scan_int '(' ')' ';'              (rule 36)

	num            shift, and enter state 47
	str            shift, and enter state 48
	id             shift, and enter state 49
	true           shift, and enter state 60
	false          shift, and enter state 61
	'('            shift, and enter state 52
	scan_int       shift, and enter state 62

	Exp            goto state 59

State 55

	OpStm -> Type id . ';'                              (rule 37)
	OpStm -> Type id . '=' Exp ';'                      (rule 38)

	'='            shift, and enter state 57
	';'            shift, and enter state 58


State 56

	Stm -> ReturnStm ';' .                              (rule 14)

	id             reduce using rule 14
	return         reduce using rule 14
	int            reduce using rule 14
	bool           reduce using rule 14
	string         reduce using rule 14
	'{'            reduce using rule 14
	'}'            reduce using rule 14
	if             reduce using rule 14
	else           reduce using rule 14
	while          reduce using rule 14
	for            reduce using rule 14
	print_int      reduce using rule 14
	print_str      reduce using rule 14


State 57

	OpStm -> Type id '=' . Exp ';'                      (rule 38)

	num            shift, and enter state 47
	str            shift, and enter state 48
	id             shift, and enter state 49
	true           shift, and enter state 60
	false          shift, and enter state 61
	'('            shift, and enter state 52

	Exp            goto state 114

State 58

	OpStm -> Type id ';' .                              (rule 37)

	id             reduce using rule 37
	return         reduce using rule 37
	int            reduce using rule 37
	bool           reduce using rule 37
	string         reduce using rule 37
	'{'            reduce using rule 37
	'}'            reduce using rule 37
	if             reduce using rule 37
	else           reduce using rule 37
	while          reduce using rule 37
	for            reduce using rule 37
	print_int      reduce using rule 37
	print_str      reduce using rule 37


State 59

	Exp -> Exp . '+' Exp                                (rule 22)
	Exp -> Exp . '-' Exp                                (rule 23)
	Exp -> Exp . '*' Exp                                (rule 24)
	Exp -> Exp . '/' Exp                                (rule 25)
	Exp -> Exp . '%' Exp                                (rule 26)
	OpStm -> id '=' Exp . ';'                           (rule 35)

	'+'            shift, and enter state 67
	'-'            shift, and enter state 68
	'*'            shift, and enter state 69
	'/'            shift, and enter state 70
	'%'            shift, and enter state 71
	';'            shift, and enter state 113


State 60

	Exp -> true .                                       (rule 28)

	')'            reduce using rule 28
	'+'            reduce using rule 28
	'-'            reduce using rule 28
	'*'            reduce using rule 28
	'/'            reduce using rule 28
	'%'            reduce using rule 28
	';'            reduce using rule 28
	','            reduce using rule 28
	"=="           reduce using rule 28
	"!="           reduce using rule 28
	"<"            reduce using rule 28
	">"            reduce using rule 28
	">="           reduce using rule 28
	"<="           reduce using rule 28
	"&&"           reduce using rule 28
	"||"           reduce using rule 28


State 61

	Exp -> false .                                      (rule 29)

	')'            reduce using rule 29
	'+'            reduce using rule 29
	'-'            reduce using rule 29
	'*'            reduce using rule 29
	'/'            reduce using rule 29
	'%'            reduce using rule 29
	';'            reduce using rule 29
	','            reduce using rule 29
	"=="           reduce using rule 29
	"!="           reduce using rule 29
	"<"            reduce using rule 29
	">"            reduce using rule 29
	">="           reduce using rule 29
	"<="           reduce using rule 29
	"&&"           reduce using rule 29
	"||"           reduce using rule 29


State 62

	OpStm -> id '=' scan_int . '(' ')' ';'              (rule 36)

	'('            shift, and enter state 112


State 63

	Stm -> id '(' Exps . ')' ';'                        (rule 15)
	Exps -> Exps . ',' Exp                              (rule 62)

	')'            shift, and enter state 111
	','            shift, and enter state 66


State 64

	Exp -> '(' Exp . ')'                                (rule 21)
	Exp -> Exp . '+' Exp                                (rule 22)
	Exp -> Exp . '-' Exp                                (rule 23)
	Exp -> Exp . '*' Exp                                (rule 24)
	Exp -> Exp . '/' Exp                                (rule 25)
	Exp -> Exp . '%' Exp                                (rule 26)

	')'            shift, and enter state 110
	'+'            shift, and enter state 67
	'-'            shift, and enter state 68
	'*'            shift, and enter state 69
	'/'            shift, and enter state 70
	'%'            shift, and enter state 71


State 65

	Exp -> id '(' . Exps ')'                            (rule 27)

	num            shift, and enter state 47
	str            shift, and enter state 48
	id             shift, and enter state 49
	true           shift, and enter state 60
	false          shift, and enter state 61
	'('            shift, and enter state 52
	')'            reduce using rule 60
	','            reduce using rule 60

	Exp            goto state 45
	Exps           goto state 109

State 66

	Exps -> Exps ',' . Exp                              (rule 62)

	num            shift, and enter state 47
	str            shift, and enter state 48
	id             shift, and enter state 49
	true           shift, and enter state 60
	false          shift, and enter state 61
	'('            shift, and enter state 52

	Exp            goto state 108

State 67

	Exp -> Exp '+' . Exp                                (rule 22)

	num            shift, and enter state 47
	str            shift, and enter state 48
	id             shift, and enter state 49
	true           shift, and enter state 60
	false          shift, and enter state 61
	'('            shift, and enter state 52

	Exp            goto state 107

State 68

	Exp -> Exp '-' . Exp                                (rule 23)

	num            shift, and enter state 47
	str            shift, and enter state 48
	id             shift, and enter state 49
	true           shift, and enter state 60
	false          shift, and enter state 61
	'('            shift, and enter state 52

	Exp            goto state 106

State 69

	Exp -> Exp '*' . Exp                                (rule 24)

	num            shift, and enter state 47
	str            shift, and enter state 48
	id             shift, and enter state 49
	true           shift, and enter state 60
	false          shift, and enter state 61
	'('            shift, and enter state 52

	Exp            goto state 105

State 70

	Exp -> Exp '/' . Exp                                (rule 25)

	num            shift, and enter state 47
	str            shift, and enter state 48
	id             shift, and enter state 49
	true           shift, and enter state 60
	false          shift, and enter state 61
	'('            shift, and enter state 52

	Exp            goto state 104

State 71

	Exp -> Exp '%' . Exp                                (rule 26)

	num            shift, and enter state 47
	str            shift, and enter state 48
	id             shift, and enter state 49
	true           shift, and enter state 60
	false          shift, and enter state 61
	'('            shift, and enter state 52

	Exp            goto state 103

State 72

	Stm -> '{' Stmts '}' .                              (rule 13)

	id             reduce using rule 13
	return         reduce using rule 13
	int            reduce using rule 13
	bool           reduce using rule 13
	string         reduce using rule 13
	'{'            reduce using rule 13
	'}'            reduce using rule 13
	if             reduce using rule 13
	else           reduce using rule 13
	while          reduce using rule 13
	for            reduce using rule 13
	print_int      reduce using rule 13
	print_str      reduce using rule 13


State 73

	Exp -> Exp . '+' Exp                                (rule 22)
	Exp -> Exp . '-' Exp                                (rule 23)
	Exp -> Exp . '*' Exp                                (rule 24)
	Exp -> Exp . '/' Exp                                (rule 25)
	Exp -> Exp . '%' Exp                                (rule 26)
	ExpCompare -> Exp . "==" Exp                        (rule 42)
	ExpCompare -> Exp . "!=" Exp                        (rule 43)
	ExpCompare -> Exp . "<=" Exp                        (rule 44)
	ExpCompare -> Exp . ">=" Exp                        (rule 45)
	ExpCompare -> Exp . "<" Exp                         (rule 46)
	ExpCompare -> Exp . ">" Exp                         (rule 47)

	'+'            shift, and enter state 67
	'-'            shift, and enter state 68
	'*'            shift, and enter state 69
	'/'            shift, and enter state 70
	'%'            shift, and enter state 71
	"=="           shift, and enter state 97
	"!="           shift, and enter state 98
	"<"            shift, and enter state 99
	">"            shift, and enter state 100
	">="           shift, and enter state 101
	"<="           shift, and enter state 102


State 74

	Stm -> if '(' ExpCompare . ')' Stm else Stm         (rule 9)
	Stm -> if '(' ExpCompare . ')' Stm                  (rule 10)
	ExpCompare -> ExpCompare . "&&" ExpCompare          (rule 48)
	ExpCompare -> ExpCompare . "||" ExpCompare          (rule 49)

	')'            shift, and enter state 96
	"&&"           shift, and enter state 92
	"||"           shift, and enter state 93


State 75

	Exp -> id .                                         (rule 20)
	Exp -> id . '(' Exps ')'                            (rule 27)
	ExpCompare -> id . '(' Exps ')'                     (rule 51)

	'('            shift, and enter state 95
	'+'            reduce using rule 20
	'-'            reduce using rule 20
	'*'            reduce using rule 20
	'/'            reduce using rule 20
	'%'            reduce using rule 20
	"=="           reduce using rule 20
	"!="           reduce using rule 20
	"<"            reduce using rule 20
	">"            reduce using rule 20
	">="           reduce using rule 20
	"<="           reduce using rule 20


State 76

	ExpCompare -> '!' . '(' ExpCompare ')'              (rule 50)

	'('            shift, and enter state 94


State 77

	Stm -> while '(' ExpCompare . ')' Stm               (rule 12)
	ExpCompare -> ExpCompare . "&&" ExpCompare          (rule 48)
	ExpCompare -> ExpCompare . "||" ExpCompare          (rule 49)

	')'            shift, and enter state 91
	"&&"           shift, and enter state 92
	"||"           shift, and enter state 93


State 78

	Stm -> for '(' OpFor . ExpCompare ';' Op ')' Stm    (rule 11)

	num            shift, and enter state 47
	str            shift, and enter state 48
	id             shift, and enter state 75
	true           shift, and enter state 60
	false          shift, and enter state 61
	'('            shift, and enter state 52
	'!'            shift, and enter state 76

	Exp            goto state 73
	ExpCompare     goto state 90

State 79

	OpFor -> Type . id '=' Exp ';'                      (rule 41)

	id             shift, and enter state 89


State 80

	OpFor -> id . '=' Exp ';'                           (rule 40)

	'='            shift, and enter state 88


State 81

	OpFor -> ';' .                                      (rule 39)

	num            reduce using rule 39
	str            reduce using rule 39
	id             reduce using rule 39
	true           reduce using rule 39
	false          reduce using rule 39
	'('            reduce using rule 39
	'!'            reduce using rule 39


State 82

	Stm -> print_int '(' Exp . ')' ';'                  (rule 16)
	Exp -> Exp . '+' Exp                                (rule 22)
	Exp -> Exp . '-' Exp                                (rule 23)
	Exp -> Exp . '*' Exp                                (rule 24)
	Exp -> Exp . '/' Exp                                (rule 25)
	Exp -> Exp . '%' Exp                                (rule 26)

	')'            shift, and enter state 87
	'+'            shift, and enter state 67
	'-'            shift, and enter state 68
	'*'            shift, and enter state 69
	'/'            shift, and enter state 70
	'%'            shift, and enter state 71


State 83

	Stm -> print_str '(' str . ')' ';'                  (rule 17)

	')'            shift, and enter state 86


State 84

	Func -> Type id '(' Decl ')' '{' Stmts ReturnStm ';' . '}'    (rule 3)
	Stm -> ReturnStm ';' .                              (rule 14)

	id             reduce using rule 14
	return         reduce using rule 14
	int            reduce using rule 14
	bool           reduce using rule 14
	string         reduce using rule 14
	'{'            reduce using rule 14
	'}'            shift, and enter state 85
	if             reduce using rule 14
	while          reduce using rule 14
	for            reduce using rule 14
	print_int      reduce using rule 14
	print_str      reduce using rule 14


State 85

	Func -> Type id '(' Decl ')' '{' Stmts ReturnStm ';' '}' .    (rule 3)

	int            reduce using rule 3
	bool           reduce using rule 3
	string         reduce using rule 3
	%eof           reduce using rule 3


State 86

	Stm -> print_str '(' str ')' . ';'                  (rule 17)

	';'            shift, and enter state 135


State 87

	Stm -> print_int '(' Exp ')' . ';'                  (rule 16)

	';'            shift, and enter state 134


State 88

	OpFor -> id '=' . Exp ';'                           (rule 40)

	num            shift, and enter state 47
	str            shift, and enter state 48
	id             shift, and enter state 49
	true           shift, and enter state 60
	false          shift, and enter state 61
	'('            shift, and enter state 52

	Exp            goto state 133

State 89

	OpFor -> Type id . '=' Exp ';'                      (rule 41)

	'='            shift, and enter state 132


State 90

	Stm -> for '(' OpFor ExpCompare . ';' Op ')' Stm    (rule 11)
	ExpCompare -> ExpCompare . "&&" ExpCompare          (rule 48)
	ExpCompare -> ExpCompare . "||" ExpCompare          (rule 49)

	';'            shift, and enter state 131
	"&&"           shift, and enter state 92
	"||"           shift, and enter state 93


State 91

	Stm -> while '(' ExpCompare ')' . Stm               (rule 12)

	id             shift, and enter state 27
	return         shift, and enter state 28
	int            shift, and enter state 4
	bool           shift, and enter state 5
	string         shift, and enter state 6
	'{'            shift, and enter state 29
	if             shift, and enter state 31
	while          shift, and enter state 32
	for            shift, and enter state 33
	print_int      shift, and enter state 34
	print_str      shift, and enter state 35

	ReturnStm      goto state 23
	Stm            goto state 130
	OpStm          goto state 25
	Type           goto state 26

State 92

	ExpCompare -> ExpCompare "&&" . ExpCompare          (rule 48)

	num            shift, and enter state 47
	str            shift, and enter state 48
	id             shift, and enter state 75
	true           shift, and enter state 60
	false          shift, and enter state 61
	'('            shift, and enter state 52
	'!'            shift, and enter state 76

	Exp            goto state 73
	ExpCompare     goto state 129

State 93

	ExpCompare -> ExpCompare "||" . ExpCompare          (rule 49)

	num            shift, and enter state 47
	str            shift, and enter state 48
	id             shift, and enter state 75
	true           shift, and enter state 60
	false          shift, and enter state 61
	'('            shift, and enter state 52
	'!'            shift, and enter state 76

	Exp            goto state 73
	ExpCompare     goto state 128

State 94

	ExpCompare -> '!' '(' . ExpCompare ')'              (rule 50)

	num            shift, and enter state 47
	str            shift, and enter state 48
	id             shift, and enter state 75
	true           shift, and enter state 60
	false          shift, and enter state 61
	'('            shift, and enter state 52
	'!'            shift, and enter state 76

	Exp            goto state 73
	ExpCompare     goto state 127

State 95

	Exp -> id '(' . Exps ')'                            (rule 27)
	ExpCompare -> id '(' . Exps ')'                     (rule 51)

	num            shift, and enter state 47
	str            shift, and enter state 48
	id             shift, and enter state 49
	true           shift, and enter state 60
	false          shift, and enter state 61
	'('            shift, and enter state 52
	')'            reduce using rule 60
	','            reduce using rule 60

	Exp            goto state 45
	Exps           goto state 126

State 96

	Stm -> if '(' ExpCompare ')' . Stm else Stm         (rule 9)
	Stm -> if '(' ExpCompare ')' . Stm                  (rule 10)

	id             shift, and enter state 27
	return         shift, and enter state 28
	int            shift, and enter state 4
	bool           shift, and enter state 5
	string         shift, and enter state 6
	'{'            shift, and enter state 29
	if             shift, and enter state 31
	while          shift, and enter state 32
	for            shift, and enter state 33
	print_int      shift, and enter state 34
	print_str      shift, and enter state 35

	ReturnStm      goto state 23
	Stm            goto state 125
	OpStm          goto state 25
	Type           goto state 26

State 97

	ExpCompare -> Exp "==" . Exp                        (rule 42)

	num            shift, and enter state 47
	str            shift, and enter state 48
	id             shift, and enter state 49
	true           shift, and enter state 60
	false          shift, and enter state 61
	'('            shift, and enter state 52

	Exp            goto state 124

State 98

	ExpCompare -> Exp "!=" . Exp                        (rule 43)

	num            shift, and enter state 47
	str            shift, and enter state 48
	id             shift, and enter state 49
	true           shift, and enter state 60
	false          shift, and enter state 61
	'('            shift, and enter state 52

	Exp            goto state 123

State 99

	ExpCompare -> Exp "<" . Exp                         (rule 46)

	num            shift, and enter state 47
	str            shift, and enter state 48
	id             shift, and enter state 49
	true           shift, and enter state 60
	false          shift, and enter state 61
	'('            shift, and enter state 52

	Exp            goto state 122

State 100

	ExpCompare -> Exp ">" . Exp                         (rule 47)

	num            shift, and enter state 47
	str            shift, and enter state 48
	id             shift, and enter state 49
	true           shift, and enter state 60
	false          shift, and enter state 61
	'('            shift, and enter state 52

	Exp            goto state 121

State 101

	ExpCompare -> Exp ">=" . Exp                        (rule 45)

	num            shift, and enter state 47
	str            shift, and enter state 48
	id             shift, and enter state 49
	true           shift, and enter state 60
	false          shift, and enter state 61
	'('            shift, and enter state 52

	Exp            goto state 120

State 102

	ExpCompare -> Exp "<=" . Exp                        (rule 44)

	num            shift, and enter state 47
	str            shift, and enter state 48
	id             shift, and enter state 49
	true           shift, and enter state 60
	false          shift, and enter state 61
	'('            shift, and enter state 52

	Exp            goto state 119

State 103

	Exp -> Exp . '+' Exp                                (rule 22)
	Exp -> Exp . '-' Exp                                (rule 23)
	Exp -> Exp . '*' Exp                                (rule 24)
	Exp -> Exp . '/' Exp                                (rule 25)
	Exp -> Exp . '%' Exp                                (rule 26)
	Exp -> Exp '%' Exp .                                (rule 26)

	')'            reduce using rule 26
	'+'            reduce using rule 26
	'-'            reduce using rule 26
	'*'            reduce using rule 26
	'/'            reduce using rule 26
	'%'            reduce using rule 26
	';'            reduce using rule 26
	','            reduce using rule 26
	"=="           reduce using rule 26
	"!="           reduce using rule 26
	"<"            reduce using rule 26
	">"            reduce using rule 26
	">="           reduce using rule 26
	"<="           reduce using rule 26
	"&&"           reduce using rule 26
	"||"           reduce using rule 26


State 104

	Exp -> Exp . '+' Exp                                (rule 22)
	Exp -> Exp . '-' Exp                                (rule 23)
	Exp -> Exp . '*' Exp                                (rule 24)
	Exp -> Exp . '/' Exp                                (rule 25)
	Exp -> Exp '/' Exp .                                (rule 25)
	Exp -> Exp . '%' Exp                                (rule 26)

	')'            reduce using rule 25
	'+'            reduce using rule 25
	'-'            reduce using rule 25
	'*'            reduce using rule 25
	'/'            reduce using rule 25
	'%'            reduce using rule 25
	';'            reduce using rule 25
	','            reduce using rule 25
	"=="           reduce using rule 25
	"!="           reduce using rule 25
	"<"            reduce using rule 25
	">"            reduce using rule 25
	">="           reduce using rule 25
	"<="           reduce using rule 25
	"&&"           reduce using rule 25
	"||"           reduce using rule 25


State 105

	Exp -> Exp . '+' Exp                                (rule 22)
	Exp -> Exp . '-' Exp                                (rule 23)
	Exp -> Exp . '*' Exp                                (rule 24)
	Exp -> Exp '*' Exp .                                (rule 24)
	Exp -> Exp . '/' Exp                                (rule 25)
	Exp -> Exp . '%' Exp                                (rule 26)

	')'            reduce using rule 24
	'+'            reduce using rule 24
	'-'            reduce using rule 24
	'*'            reduce using rule 24
	'/'            reduce using rule 24
	'%'            reduce using rule 24
	';'            reduce using rule 24
	','            reduce using rule 24
	"=="           reduce using rule 24
	"!="           reduce using rule 24
	"<"            reduce using rule 24
	">"            reduce using rule 24
	">="           reduce using rule 24
	"<="           reduce using rule 24
	"&&"           reduce using rule 24
	"||"           reduce using rule 24


State 106

	Exp -> Exp . '+' Exp                                (rule 22)
	Exp -> Exp . '-' Exp                                (rule 23)
	Exp -> Exp '-' Exp .                                (rule 23)
	Exp -> Exp . '*' Exp                                (rule 24)
	Exp -> Exp . '/' Exp                                (rule 25)
	Exp -> Exp . '%' Exp                                (rule 26)

	')'            reduce using rule 23
	'+'            reduce using rule 23
	'-'            reduce using rule 23
	'*'            shift, and enter state 69
	'/'            shift, and enter state 70
	'%'            shift, and enter state 71
	';'            reduce using rule 23
	','            reduce using rule 23
	"=="           reduce using rule 23
	"!="           reduce using rule 23
	"<"            reduce using rule 23
	">"            reduce using rule 23
	">="           reduce using rule 23
	"<="           reduce using rule 23
	"&&"           reduce using rule 23
	"||"           reduce using rule 23


State 107

	Exp -> Exp . '+' Exp                                (rule 22)
	Exp -> Exp '+' Exp .                                (rule 22)
	Exp -> Exp . '-' Exp                                (rule 23)
	Exp -> Exp . '*' Exp                                (rule 24)
	Exp -> Exp . '/' Exp                                (rule 25)
	Exp -> Exp . '%' Exp                                (rule 26)

	')'            reduce using rule 22
	'+'            reduce using rule 22
	'-'            reduce using rule 22
	'*'            shift, and enter state 69
	'/'            shift, and enter state 70
	'%'            shift, and enter state 71
	';'            reduce using rule 22
	','            reduce using rule 22
	"=="           reduce using rule 22
	"!="           reduce using rule 22
	"<"            reduce using rule 22
	">"            reduce using rule 22
	">="           reduce using rule 22
	"<="           reduce using rule 22
	"&&"           reduce using rule 22
	"||"           reduce using rule 22


State 108

	Exp -> Exp . '+' Exp                                (rule 22)
	Exp -> Exp . '-' Exp                                (rule 23)
	Exp -> Exp . '*' Exp                                (rule 24)
	Exp -> Exp . '/' Exp                                (rule 25)
	Exp -> Exp . '%' Exp                                (rule 26)
	Exps -> Exps ',' Exp .                              (rule 62)

	')'            reduce using rule 62
	'+'            shift, and enter state 67
	'-'            shift, and enter state 68
	'*'            shift, and enter state 69
	'/'            shift, and enter state 70
	'%'            shift, and enter state 71
	';'            reduce using rule 62
	','            reduce using rule 62


State 109

	Exp -> id '(' Exps . ')'                            (rule 27)
	Exps -> Exps . ',' Exp                              (rule 62)

	')'            shift, and enter state 118
	','            shift, and enter state 66


State 110

	Exp -> '(' Exp ')' .                                (rule 21)

	')'            reduce using rule 21
	'+'            reduce using rule 21
	'-'            reduce using rule 21
	'*'            reduce using rule 21
	'/'            reduce using rule 21
	'%'            reduce using rule 21
	';'            reduce using rule 21
	','            reduce using rule 21
	"=="           reduce using rule 21
	"!="           reduce using rule 21
	"<"            reduce using rule 21
	">"            reduce using rule 21
	">="           reduce using rule 21
	"<="           reduce using rule 21
	"&&"           reduce using rule 21
	"||"           reduce using rule 21


State 111

	Stm -> id '(' Exps ')' . ';'                        (rule 15)

	';'            shift, and enter state 117


State 112

	OpStm -> id '=' scan_int '(' . ')' ';'              (rule 36)

	')'            shift, and enter state 116


State 113

	OpStm -> id '=' Exp ';' .                           (rule 35)

	id             reduce using rule 35
	return         reduce using rule 35
	int            reduce using rule 35
	bool           reduce using rule 35
	string         reduce using rule 35
	'{'            reduce using rule 35
	'}'            reduce using rule 35
	if             reduce using rule 35
	else           reduce using rule 35
	while          reduce using rule 35
	for            reduce using rule 35
	print_int      reduce using rule 35
	print_str      reduce using rule 35


State 114

	Exp -> Exp . '+' Exp                                (rule 22)
	Exp -> Exp . '-' Exp                                (rule 23)
	Exp -> Exp . '*' Exp                                (rule 24)
	Exp -> Exp . '/' Exp                                (rule 25)
	Exp -> Exp . '%' Exp                                (rule 26)
	OpStm -> Type id '=' Exp . ';'                      (rule 38)

	'+'            shift, and enter state 67
	'-'            shift, and enter state 68
	'*'            shift, and enter state 69
	'/'            shift, and enter state 70
	'%'            shift, and enter state 71
	';'            shift, and enter state 115


State 115

	OpStm -> Type id '=' Exp ';' .                      (rule 38)

	id             reduce using rule 38
	return         reduce using rule 38
	int            reduce using rule 38
	bool           reduce using rule 38
	string         reduce using rule 38
	'{'            reduce using rule 38
	'}'            reduce using rule 38
	if             reduce using rule 38
	else           reduce using rule 38
	while          reduce using rule 38
	for            reduce using rule 38
	print_int      reduce using rule 38
	print_str      reduce using rule 38


State 116

	OpStm -> id '=' scan_int '(' ')' . ';'              (rule 36)

	';'            shift, and enter state 145


State 117

	Stm -> id '(' Exps ')' ';' .                        (rule 15)

	id             reduce using rule 15
	return         reduce using rule 15
	int            reduce using rule 15
	bool           reduce using rule 15
	string         reduce using rule 15
	'{'            reduce using rule 15
	'}'            reduce using rule 15
	if             reduce using rule 15
	else           reduce using rule 15
	while          reduce using rule 15
	for            reduce using rule 15
	print_int      reduce using rule 15
	print_str      reduce using rule 15


State 118

	Exp -> id '(' Exps ')' .                            (rule 27)

	')'            reduce using rule 27
	'+'            reduce using rule 27
	'-'            reduce using rule 27
	'*'            reduce using rule 27
	'/'            reduce using rule 27
	'%'            reduce using rule 27
	';'            reduce using rule 27
	','            reduce using rule 27
	"=="           reduce using rule 27
	"!="           reduce using rule 27
	"<"            reduce using rule 27
	">"            reduce using rule 27
	">="           reduce using rule 27
	"<="           reduce using rule 27
	"&&"           reduce using rule 27
	"||"           reduce using rule 27


State 119

	Exp -> Exp . '+' Exp                                (rule 22)
	Exp -> Exp . '-' Exp                                (rule 23)
	Exp -> Exp . '*' Exp                                (rule 24)
	Exp -> Exp . '/' Exp                                (rule 25)
	Exp -> Exp . '%' Exp                                (rule 26)
	ExpCompare -> Exp "<=" Exp .                        (rule 44)

	')'            reduce using rule 44
	'+'            shift, and enter state 67
	'-'            shift, and enter state 68
	'*'            shift, and enter state 69
	'/'            shift, and enter state 70
	'%'            shift, and enter state 71
	';'            reduce using rule 44
	"&&"           reduce using rule 44
	"||"           reduce using rule 44


State 120

	Exp -> Exp . '+' Exp                                (rule 22)
	Exp -> Exp . '-' Exp                                (rule 23)
	Exp -> Exp . '*' Exp                                (rule 24)
	Exp -> Exp . '/' Exp                                (rule 25)
	Exp -> Exp . '%' Exp                                (rule 26)
	ExpCompare -> Exp ">=" Exp .                        (rule 45)

	')'            reduce using rule 45
	'+'            shift, and enter state 67
	'-'            shift, and enter state 68
	'*'            shift, and enter state 69
	'/'            shift, and enter state 70
	'%'            shift, and enter state 71
	';'            reduce using rule 45
	"&&"           reduce using rule 45
	"||"           reduce using rule 45


State 121

	Exp -> Exp . '+' Exp                                (rule 22)
	Exp -> Exp . '-' Exp                                (rule 23)
	Exp -> Exp . '*' Exp                                (rule 24)
	Exp -> Exp . '/' Exp                                (rule 25)
	Exp -> Exp . '%' Exp                                (rule 26)
	ExpCompare -> Exp ">" Exp .                         (rule 47)

	')'            reduce using rule 47
	'+'            shift, and enter state 67
	'-'            shift, and enter state 68
	'*'            shift, and enter state 69
	'/'            shift, and enter state 70
	'%'            shift, and enter state 71
	';'            reduce using rule 47
	"&&"           reduce using rule 47
	"||"           reduce using rule 47


State 122

	Exp -> Exp . '+' Exp                                (rule 22)
	Exp -> Exp . '-' Exp                                (rule 23)
	Exp -> Exp . '*' Exp                                (rule 24)
	Exp -> Exp . '/' Exp                                (rule 25)
	Exp -> Exp . '%' Exp                                (rule 26)
	ExpCompare -> Exp "<" Exp .                         (rule 46)

	')'            reduce using rule 46
	'+'            shift, and enter state 67
	'-'            shift, and enter state 68
	'*'            shift, and enter state 69
	'/'            shift, and enter state 70
	'%'            shift, and enter state 71
	';'            reduce using rule 46
	"&&"           reduce using rule 46
	"||"           reduce using rule 46


State 123

	Exp -> Exp . '+' Exp                                (rule 22)
	Exp -> Exp . '-' Exp                                (rule 23)
	Exp -> Exp . '*' Exp                                (rule 24)
	Exp -> Exp . '/' Exp                                (rule 25)
	Exp -> Exp . '%' Exp                                (rule 26)
	ExpCompare -> Exp "!=" Exp .                        (rule 43)

	')'            reduce using rule 43
	'+'            shift, and enter state 67
	'-'            shift, and enter state 68
	'*'            shift, and enter state 69
	'/'            shift, and enter state 70
	'%'            shift, and enter state 71
	';'            reduce using rule 43
	"&&"           reduce using rule 43
	"||"           reduce using rule 43


State 124

	Exp -> Exp . '+' Exp                                (rule 22)
	Exp -> Exp . '-' Exp                                (rule 23)
	Exp -> Exp . '*' Exp                                (rule 24)
	Exp -> Exp . '/' Exp                                (rule 25)
	Exp -> Exp . '%' Exp                                (rule 26)
	ExpCompare -> Exp "==" Exp .                        (rule 42)

	')'            reduce using rule 42
	'+'            shift, and enter state 67
	'-'            shift, and enter state 68
	'*'            shift, and enter state 69
	'/'            shift, and enter state 70
	'%'            shift, and enter state 71
	';'            reduce using rule 42
	"&&"           reduce using rule 42
	"||"           reduce using rule 42


State 125

	Stm -> if '(' ExpCompare ')' Stm . else Stm         (rule 9)
	Stm -> if '(' ExpCompare ')' Stm .                  (rule 10)

	id             reduce using rule 10
	return         reduce using rule 10
	int            reduce using rule 10
	bool           reduce using rule 10
	string         reduce using rule 10
	'{'            reduce using rule 10
	'}'            reduce using rule 10
	if             reduce using rule 10
	else           shift, and enter state 144
			(reduce using rule 10)

	while          reduce using rule 10
	for            reduce using rule 10
	print_int      reduce using rule 10
	print_str      reduce using rule 10


State 126

	Exp -> id '(' Exps . ')'                            (rule 27)
	ExpCompare -> id '(' Exps . ')'                     (rule 51)
	Exps -> Exps . ',' Exp                              (rule 62)

	')'            shift, and enter state 143
	','            shift, and enter state 66


State 127

	ExpCompare -> ExpCompare . "&&" ExpCompare          (rule 48)
	ExpCompare -> ExpCompare . "||" ExpCompare          (rule 49)
	ExpCompare -> '!' '(' ExpCompare . ')'              (rule 50)

	')'            shift, and enter state 142
	"&&"           shift, and enter state 92
	"||"           shift, and enter state 93


State 128

	ExpCompare -> ExpCompare . "&&" ExpCompare          (rule 48)
	ExpCompare -> ExpCompare . "||" ExpCompare          (rule 49)
	ExpCompare -> ExpCompare "||" ExpCompare .          (rule 49)

	')'            reduce using rule 49
	';'            reduce using rule 49
	"&&"           reduce using rule 49
	"||"           reduce using rule 49


State 129

	ExpCompare -> ExpCompare . "&&" ExpCompare          (rule 48)
	ExpCompare -> ExpCompare "&&" ExpCompare .          (rule 48)
	ExpCompare -> ExpCompare . "||" ExpCompare          (rule 49)

	')'            reduce using rule 48
	';'            reduce using rule 48
	"&&"           reduce using rule 48
	"||"           reduce using rule 48


State 130

	Stm -> while '(' ExpCompare ')' Stm .               (rule 12)

	id             reduce using rule 12
	return         reduce using rule 12
	int            reduce using rule 12
	bool           reduce using rule 12
	string         reduce using rule 12
	'{'            reduce using rule 12
	'}'            reduce using rule 12
	if             reduce using rule 12
	else           reduce using rule 12
	while          reduce using rule 12
	for            reduce using rule 12
	print_int      reduce using rule 12
	print_str      reduce using rule 12


State 131

	Stm -> for '(' OpFor ExpCompare ';' . Op ')' Stm    (rule 11)

	id             shift, and enter state 139
	"++"           shift, and enter state 140
	"--"           shift, and enter state 141

	Op             goto state 138

State 132

	OpFor -> Type id '=' . Exp ';'                      (rule 41)

	num            shift, and enter state 47
	str            shift, and enter state 48
	id             shift, and enter state 49
	true           shift, and enter state 60
	false          shift, and enter state 61
	'('            shift, and enter state 52

	Exp            goto state 137

State 133

	Exp -> Exp . '+' Exp                                (rule 22)
	Exp -> Exp . '-' Exp                                (rule 23)
	Exp -> Exp . '*' Exp                                (rule 24)
	Exp -> Exp . '/' Exp                                (rule 25)
	Exp -> Exp . '%' Exp                                (rule 26)
	OpFor -> id '=' Exp . ';'                           (rule 40)

	'+'            shift, and enter state 67
	'-'            shift, and enter state 68
	'*'            shift, and enter state 69
	'/'            shift, and enter state 70
	'%'            shift, and enter state 71
	';'            shift, and enter state 136


State 134

	Stm -> print_int '(' Exp ')' ';' .                  (rule 16)

	id             reduce using rule 16
	return         reduce using rule 16
	int            reduce using rule 16
	bool           reduce using rule 16
	string         reduce using rule 16
	'{'            reduce using rule 16
	'}'            reduce using rule 16
	if             reduce using rule 16
	else           reduce using rule 16
	while          reduce using rule 16
	for            reduce using rule 16
	print_int      reduce using rule 16
	print_str      reduce using rule 16


State 135

	Stm -> print_str '(' str ')' ';' .                  (rule 17)

	id             reduce using rule 17
	return         reduce using rule 17
	int            reduce using rule 17
	bool           reduce using rule 17
	string         reduce using rule 17
	'{'            reduce using rule 17
	'}'            reduce using rule 17
	if             reduce using rule 17
	else           reduce using rule 17
	while          reduce using rule 17
	for            reduce using rule 17
	print_int      reduce using rule 17
	print_str      reduce using rule 17


State 136

	OpFor -> id '=' Exp ';' .                           (rule 40)

	num            reduce using rule 40
	str            reduce using rule 40
	id             reduce using rule 40
	true           reduce using rule 40
	false          reduce using rule 40
	'('            reduce using rule 40
	'!'            reduce using rule 40


State 137

	Exp -> Exp . '+' Exp                                (rule 22)
	Exp -> Exp . '-' Exp                                (rule 23)
	Exp -> Exp . '*' Exp                                (rule 24)
	Exp -> Exp . '/' Exp                                (rule 25)
	Exp -> Exp . '%' Exp                                (rule 26)
	OpFor -> Type id '=' Exp . ';'                      (rule 41)

	'+'            shift, and enter state 67
	'-'            shift, and enter state 68
	'*'            shift, and enter state 69
	'/'            shift, and enter state 70
	'%'            shift, and enter state 71
	';'            shift, and enter state 153


State 138

	Stm -> for '(' OpFor ExpCompare ';' Op . ')' Stm    (rule 11)

	')'            shift, and enter state 152


State 139

	Op -> id . "++"                                     (rule 31)
	Op -> id . "--"                                     (rule 33)
	Op -> id . '=' Exp                                  (rule 34)

	'='            shift, and enter state 149
	"++"           shift, and enter state 150
	"--"           shift, and enter state 151


State 140

	Op -> "++" . id                                     (rule 30)

	id             shift, and enter state 148


State 141

	Op -> "--" . id                                     (rule 32)

	id             shift, and enter state 147


State 142

	ExpCompare -> '!' '(' ExpCompare ')' .              (rule 50)

	')'            reduce using rule 50
	';'            reduce using rule 50
	"&&"           reduce using rule 50
	"||"           reduce using rule 50


State 143

	Exp -> id '(' Exps ')' .                            (rule 27)
	ExpCompare -> id '(' Exps ')' .                     (rule 51)

	')'            reduce using rule 51
	'+'            reduce using rule 27
	'-'            reduce using rule 27
	'*'            reduce using rule 27
	'/'            reduce using rule 27
	'%'            reduce using rule 27
	';'            reduce using rule 51
	"=="           reduce using rule 27
	"!="           reduce using rule 27
	"<"            reduce using rule 27
	">"            reduce using rule 27
	">="           reduce using rule 27
	"<="           reduce using rule 27
	"&&"           reduce using rule 51
	"||"           reduce using rule 51


State 144

	Stm -> if '(' ExpCompare ')' Stm else . Stm         (rule 9)

	id             shift, and enter state 27
	return         shift, and enter state 28
	int            shift, and enter state 4
	bool           shift, and enter state 5
	string         shift, and enter state 6
	'{'            shift, and enter state 29
	if             shift, and enter state 31
	while          shift, and enter state 32
	for            shift, and enter state 33
	print_int      shift, and enter state 34
	print_str      shift, and enter state 35

	ReturnStm      goto state 23
	Stm            goto state 146
	OpStm          goto state 25
	Type           goto state 26

State 145

	OpStm -> id '=' scan_int '(' ')' ';' .              (rule 36)

	id             reduce using rule 36
	return         reduce using rule 36
	int            reduce using rule 36
	bool           reduce using rule 36
	string         reduce using rule 36
	'{'            reduce using rule 36
	'}'            reduce using rule 36
	if             reduce using rule 36
	else           reduce using rule 36
	while          reduce using rule 36
	for            reduce using rule 36
	print_int      reduce using rule 36
	print_str      reduce using rule 36


State 146

	Stm -> if '(' ExpCompare ')' Stm else Stm .         (rule 9)

	id             reduce using rule 9
	return         reduce using rule 9
	int            reduce using rule 9
	bool           reduce using rule 9
	string         reduce using rule 9
	'{'            reduce using rule 9
	'}'            reduce using rule 9
	if             reduce using rule 9
	else           reduce using rule 9
	while          reduce using rule 9
	for            reduce using rule 9
	print_int      reduce using rule 9
	print_str      reduce using rule 9


State 147

	Op -> "--" id .                                     (rule 32)

	')'            reduce using rule 32


State 148

	Op -> "++" id .                                     (rule 30)

	')'            reduce using rule 30


State 149

	Op -> id '=' . Exp                                  (rule 34)

	num            shift, and enter state 47
	str            shift, and enter state 48
	id             shift, and enter state 49
	true           shift, and enter state 60
	false          shift, and enter state 61
	'('            shift, and enter state 52

	Exp            goto state 155

State 150

	Op -> id "++" .                                     (rule 31)

	')'            reduce using rule 31


State 151

	Op -> id "--" .                                     (rule 33)

	')'            reduce using rule 33


State 152

	Stm -> for '(' OpFor ExpCompare ';' Op ')' . Stm    (rule 11)

	id             shift, and enter state 27
	return         shift, and enter state 28
	int            shift, and enter state 4
	bool           shift, and enter state 5
	string         shift, and enter state 6
	'{'            shift, and enter state 29
	if             shift, and enter state 31
	while          shift, and enter state 32
	for            shift, and enter state 33
	print_int      shift, and enter state 34
	print_str      shift, and enter state 35

	ReturnStm      goto state 23
	Stm            goto state 154
	OpStm          goto state 25
	Type           goto state 26

State 153

	OpFor -> Type id '=' Exp ';' .                      (rule 41)

	num            reduce using rule 41
	str            reduce using rule 41
	id             reduce using rule 41
	true           reduce using rule 41
	false          reduce using rule 41
	'('            reduce using rule 41
	'!'            reduce using rule 41


State 154

	Stm -> for '(' OpFor ExpCompare ';' Op ')' Stm .    (rule 11)

	id             reduce using rule 11
	return         reduce using rule 11
	int            reduce using rule 11
	bool           reduce using rule 11
	string         reduce using rule 11
	'{'            reduce using rule 11
	'}'            reduce using rule 11
	if             reduce using rule 11
	else           reduce using rule 11
	while          reduce using rule 11
	for            reduce using rule 11
	print_int      reduce using rule 11
	print_str      reduce using rule 11


State 155

	Exp -> Exp . '+' Exp                                (rule 22)
	Exp -> Exp . '-' Exp                                (rule 23)
	Exp -> Exp . '*' Exp                                (rule 24)
	Exp -> Exp . '/' Exp                                (rule 25)
	Exp -> Exp . '%' Exp                                (rule 26)
	Op -> id '=' Exp .                                  (rule 34)

	')'            reduce using rule 34
	'+'            shift, and enter state 67
	'-'            shift, and enter state 68
	'*'            shift, and enter state 69
	'/'            shift, and enter state 70
	'%'            shift, and enter state 71


-----------------------------------------------------------------------------
Grammar Totals
-----------------------------------------------------------------------------
Number of rules: 63
Number of terminals: 42
Number of non-terminals: 14
Number of states: 156
