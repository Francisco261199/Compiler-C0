-----------------------------------------------------------------------------
Info file generated by Happy Version 1.19.11 from ParserC0.y
-----------------------------------------------------------------------------

state 131 contains 1 shift/reduce conflicts.
state 151 contains 11 shift/reduce conflicts.

terminal break is unused
terminal continue is unused

-----------------------------------------------------------------------------
Grammar
-----------------------------------------------------------------------------
	%start_parserC0 -> Funcs                           (0)
	Funcs -> Func                                      (1)
	Funcs -> Funcs Func                                (2)
	Func -> Type id '(' Decl ')' '{' Stmts ReturnStm ';' '}'   (3)
	Func -> Type main '(' ')' '{' Stmts '}'            (4)
	ReturnStm -> return Exps                           (5)
	ReturnStm -> return true                           (6)
	ReturnStm -> return false                          (7)
	Stm -> OpStm                                       (8)
	Stm -> if '(' ExpCompare ')' Stm else Stm          (9)
	Stm -> if '(' ExpCompare ')' Stm                   (10)
	Stm -> for '(' OpFor ExpCompare ';' Op ')' Stm     (11)
	Stm -> for '(' OpFor ExpCompare ';' Op ')'         (12)
	Stm -> while '(' ExpCompare ')' Stm                (13)
	Stm -> '{' Stmts '}'                               (14)
	Stm -> ReturnStm ';'                               (15)
	Stm -> id '(' Exps ')' ';'                         (16)
	Stm -> print_int '(' Exp ')' ';'                   (17)
	Stm -> print_str '(' str ')' ';'                   (18)
	Exp -> num                                         (19)
	Exp -> str                                         (20)
	Exp -> id                                          (21)
	Exp -> '(' Exp ')'                                 (22)
	Exp -> Exp '+' Exp                                 (23)
	Exp -> Exp '-' Exp                                 (24)
	Exp -> Exp '*' Exp                                 (25)
	Exp -> Exp '/' Exp                                 (26)
	Exp -> Exp '%' Exp                                 (27)
	Exp -> id '(' Exps ')'                             (28)
	Exp -> Op                                          (29)
	Op -> "++" id                                      (30)
	Op -> id "++"                                      (31)
	Op -> "--" id                                      (32)
	Op -> id "--"                                      (33)
	OpStm -> id '=' Exp ';'                            (34)
	OpStm -> id '=' scan_int '(' ')' ';'               (35)
	OpStm -> Type id ';'                               (36)
	OpStm -> Type id '=' Exp ';'                       (37)
	OpFor -> id '=' Exp ';'                            (38)
	OpFor -> Type id '=' Exp ';'                       (39)
	ExpCompare -> Exp "==" Exp                         (40)
	ExpCompare -> Exp "!=" Exp                         (41)
	ExpCompare -> Exp "<=" Exp                         (42)
	ExpCompare -> Exp ">=" Exp                         (43)
	ExpCompare -> Exp "<" Exp                          (44)
	ExpCompare -> Exp ">" Exp                          (45)
	ExpCompare -> ExpCompare "&&" ExpCompare           (46)
	ExpCompare -> ExpCompare "||" ExpCompare           (47)
	ExpCompare -> '!' '(' ExpCompare ')'               (48)
	ExpCompare -> true                                 (49)
	ExpCompare -> false                                (50)
	ExpCompare -> id '(' Exps ')'                      (51)
	Stmts ->                                           (52)
	Stmts -> Stmts Stm                                 (53)
	Type -> int                                        (54)
	Type -> bool                                       (55)
	Type -> string                                     (56)
	Decl ->                                            (57)
	Decl -> Type id                                    (58)
	Decl -> Decl ',' Type id                           (59)
	Exps ->                                            (60)
	Exps -> Exp                                        (61)
	Exps -> Exps ',' Exp                               (62)

-----------------------------------------------------------------------------
Terminals
-----------------------------------------------------------------------------
	num            { NUM_TOK $$ }
	str            { STRING_TOK $$ }
	id             { VAR_TOK $$ }
	true           { TRUE_TOK $$ }
	false          { FALSE_TOK $$ }
	return         { RETURN_TOK }
	main           { MAIN_TOK }
	break          { BREAK_TOK }
	continue       { CONTINUE_TOK }
	int            { INT_DEF_TOK }
	bool           { BOOL_DEF_TOK }
	string         { STRING_DEF_TOK }
	'('            { LPAREN_TOK }
	')'            { RPAREN_TOK }
	'='            { ASSIGN_TOK }
	'{'            { LBRACE_TOK }
	'}'            { RBRACE_TOK }
	'+'            { PLUS_TOK }
	'-'            { MINUS_TOK }
	'*'            { MULT_TOK }
	'/'            { DIV_TOK }
	'%'            { MOD_TOK }
	';'            { SEMICOLON_TOK }
	','            { COLON_TOK }
	"++"           { INCR_TOK }
	"--"           { DECR_TOK }
	"=="           { EQUAL_TOK }
	"!="           { NEQUAL_TOK }
	"<"            { LTHEN_TOK }
	">"            { GTHEN_TOK }
	">="           { GTOE_TOK }
	"<="           { LTOE_TOK }
	"&&"           { AND_TOK }
	"||"           { OR_TOK }
	'!'            { NOT_TOK }
	if             { IF_TOK }
	else           { ELSE_TOK }
	while          { WHILE_TOK }
	for            { FOR_TOK }
	print_int      { PRINTINT_TOK }
	scan_int       { SCANINT_TOK }
	print_str      { PRINTSTR_TOK }

-----------------------------------------------------------------------------
Non-terminals
-----------------------------------------------------------------------------
	%start_parserC0 rule  0
	Funcs           rules 1, 2
	Func            rules 3, 4
	ReturnStm       rules 5, 6, 7
	Stm             rules 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18
	Exp             rules 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29
	Op              rules 30, 31, 32, 33
	OpStm           rules 34, 35, 36, 37
	OpFor           rules 38, 39
	ExpCompare      rules 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51
	Stmts           rules 52, 53
	Type            rules 54, 55, 56
	Decl            rules 57, 58, 59
	Exps            rules 60, 61, 62

-----------------------------------------------------------------------------
States
-----------------------------------------------------------------------------
State 0


	int            shift, and enter state 4
	bool           shift, and enter state 5
	string         shift, and enter state 6

	Funcs          goto state 7
	Func           goto state 2
	Type           goto state 3

State 1


	int            shift, and enter state 4
	bool           shift, and enter state 5
	string         shift, and enter state 6

	Func           goto state 2
	Type           goto state 3

State 2

	Funcs -> Func .                                     (rule 1)

	int            reduce using rule 1
	bool           reduce using rule 1
	string         reduce using rule 1
	%eof           reduce using rule 1


State 3

	Func -> Type . id '(' Decl ')' '{' Stmts ReturnStm ';' '}'    (rule 3)
	Func -> Type . main '(' ')' '{' Stmts '}'           (rule 4)

	id             shift, and enter state 9
	main           shift, and enter state 10


State 4

	Type -> int .                                       (rule 54)

	id             reduce using rule 54
	main           reduce using rule 54


State 5

	Type -> bool .                                      (rule 55)

	id             reduce using rule 55
	main           reduce using rule 55


State 6

	Type -> string .                                    (rule 56)

	id             reduce using rule 56
	main           reduce using rule 56


State 7

	%start_parserC0 -> Funcs .                          (rule 0)
	Funcs -> Funcs . Func                               (rule 2)

	int            shift, and enter state 4
	bool           shift, and enter state 5
	string         shift, and enter state 6
	%eof           accept

	Func           goto state 8
	Type           goto state 3

State 8

	Funcs -> Funcs Func .                               (rule 2)

	int            reduce using rule 2
	bool           reduce using rule 2
	string         reduce using rule 2
	%eof           reduce using rule 2


State 9

	Func -> Type id . '(' Decl ')' '{' Stmts ReturnStm ';' '}'    (rule 3)

	'('            shift, and enter state 12


State 10

	Func -> Type main . '(' ')' '{' Stmts '}'           (rule 4)

	'('            shift, and enter state 11


State 11

	Func -> Type main '(' . ')' '{' Stmts '}'           (rule 4)

	')'            shift, and enter state 15


State 12

	Func -> Type id '(' . Decl ')' '{' Stmts ReturnStm ';' '}'    (rule 3)

	int            shift, and enter state 4
	bool           shift, and enter state 5
	string         shift, and enter state 6
	')'            reduce using rule 57
	','            reduce using rule 57

	Type           goto state 13
	Decl           goto state 14

State 13

	Decl -> Type . id                                   (rule 58)

	id             shift, and enter state 19


State 14

	Func -> Type id '(' Decl . ')' '{' Stmts ReturnStm ';' '}'    (rule 3)
	Decl -> Decl . ',' Type id                          (rule 59)

	')'            shift, and enter state 17
	','            shift, and enter state 18


State 15

	Func -> Type main '(' ')' . '{' Stmts '}'           (rule 4)

	'{'            shift, and enter state 16


State 16

	Func -> Type main '(' ')' '{' . Stmts '}'           (rule 4)

	id             reduce using rule 52
	return         reduce using rule 52
	int            reduce using rule 52
	bool           reduce using rule 52
	string         reduce using rule 52
	'{'            reduce using rule 52
	'}'            reduce using rule 52
	if             reduce using rule 52
	while          reduce using rule 52
	for            reduce using rule 52
	print_int      reduce using rule 52
	print_str      reduce using rule 52

	Stmts          goto state 22

State 17

	Func -> Type id '(' Decl ')' . '{' Stmts ReturnStm ';' '}'    (rule 3)

	'{'            shift, and enter state 21


State 18

	Decl -> Decl ',' . Type id                          (rule 59)

	int            shift, and enter state 4
	bool           shift, and enter state 5
	string         shift, and enter state 6

	Type           goto state 20

State 19

	Decl -> Type id .                                   (rule 58)

	')'            reduce using rule 58
	','            reduce using rule 58


State 20

	Decl -> Decl ',' Type . id                          (rule 59)

	id             shift, and enter state 37


State 21

	Func -> Type id '(' Decl ')' '{' . Stmts ReturnStm ';' '}'    (rule 3)

	id             reduce using rule 52
	return         reduce using rule 52
	int            reduce using rule 52
	bool           reduce using rule 52
	string         reduce using rule 52
	'{'            reduce using rule 52
	if             reduce using rule 52
	while          reduce using rule 52
	for            reduce using rule 52
	print_int      reduce using rule 52
	print_str      reduce using rule 52

	Stmts          goto state 36

State 22

	Func -> Type main '(' ')' '{' Stmts . '}'           (rule 4)
	Stmts -> Stmts . Stm                                (rule 53)

	id             shift, and enter state 27
	return         shift, and enter state 28
	int            shift, and enter state 4
	bool           shift, and enter state 5
	string         shift, and enter state 6
	'{'            shift, and enter state 29
	'}'            shift, and enter state 30
	if             shift, and enter state 31
	while          shift, and enter state 32
	for            shift, and enter state 33
	print_int      shift, and enter state 34
	print_str      shift, and enter state 35

	ReturnStm      goto state 23
	Stm            goto state 24
	OpStm          goto state 25
	Type           goto state 26

State 23

	Stm -> ReturnStm . ';'                              (rule 15)

	';'            shift, and enter state 59


State 24

	Stmts -> Stmts Stm .                                (rule 53)

	id             reduce using rule 53
	return         reduce using rule 53
	int            reduce using rule 53
	bool           reduce using rule 53
	string         reduce using rule 53
	'{'            reduce using rule 53
	'}'            reduce using rule 53
	if             reduce using rule 53
	while          reduce using rule 53
	for            reduce using rule 53
	print_int      reduce using rule 53
	print_str      reduce using rule 53


State 25

	Stm -> OpStm .                                      (rule 8)

	id             reduce using rule 8
	return         reduce using rule 8
	int            reduce using rule 8
	bool           reduce using rule 8
	string         reduce using rule 8
	'{'            reduce using rule 8
	'}'            reduce using rule 8
	if             reduce using rule 8
	else           reduce using rule 8
	while          reduce using rule 8
	for            reduce using rule 8
	print_int      reduce using rule 8
	print_str      reduce using rule 8


State 26

	OpStm -> Type . id ';'                              (rule 36)
	OpStm -> Type . id '=' Exp ';'                      (rule 37)

	id             shift, and enter state 58


State 27

	Stm -> id . '(' Exps ')' ';'                        (rule 16)
	OpStm -> id . '=' Exp ';'                           (rule 34)
	OpStm -> id . '=' scan_int '(' ')' ';'              (rule 35)

	'('            shift, and enter state 56
	'='            shift, and enter state 57


State 28

	ReturnStm -> return . Exps                          (rule 5)
	ReturnStm -> return . true                          (rule 6)
	ReturnStm -> return . false                         (rule 7)

	num            shift, and enter state 48
	str            shift, and enter state 49
	id             shift, and enter state 50
	true           shift, and enter state 51
	false          shift, and enter state 52
	'('            shift, and enter state 53
	';'            reduce using rule 60
	','            reduce using rule 60
	"++"           shift, and enter state 54
	"--"           shift, and enter state 55

	Exp            goto state 45
	Op             goto state 46
	Exps           goto state 47

State 29

	Stm -> '{' . Stmts '}'                              (rule 14)

	id             reduce using rule 52
	return         reduce using rule 52
	int            reduce using rule 52
	bool           reduce using rule 52
	string         reduce using rule 52
	'{'            reduce using rule 52
	'}'            reduce using rule 52
	if             reduce using rule 52
	while          reduce using rule 52
	for            reduce using rule 52
	print_int      reduce using rule 52
	print_str      reduce using rule 52

	Stmts          goto state 44

State 30

	Func -> Type main '(' ')' '{' Stmts '}' .           (rule 4)

	int            reduce using rule 4
	bool           reduce using rule 4
	string         reduce using rule 4
	%eof           reduce using rule 4


State 31

	Stm -> if . '(' ExpCompare ')' Stm else Stm         (rule 9)
	Stm -> if . '(' ExpCompare ')' Stm                  (rule 10)

	'('            shift, and enter state 43


State 32

	Stm -> while . '(' ExpCompare ')' Stm               (rule 13)

	'('            shift, and enter state 42


State 33

	Stm -> for . '(' OpFor ExpCompare ';' Op ')' Stm    (rule 11)
	Stm -> for . '(' OpFor ExpCompare ';' Op ')'        (rule 12)

	'('            shift, and enter state 41


State 34

	Stm -> print_int . '(' Exp ')' ';'                  (rule 17)

	'('            shift, and enter state 40


State 35

	Stm -> print_str . '(' str ')' ';'                  (rule 18)

	'('            shift, and enter state 39


State 36

	Func -> Type id '(' Decl ')' '{' Stmts . ReturnStm ';' '}'    (rule 3)
	Stmts -> Stmts . Stm                                (rule 53)

	id             shift, and enter state 27
	return         shift, and enter state 28
	int            shift, and enter state 4
	bool           shift, and enter state 5
	string         shift, and enter state 6
	'{'            shift, and enter state 29
	if             shift, and enter state 31
	while          shift, and enter state 32
	for            shift, and enter state 33
	print_int      shift, and enter state 34
	print_str      shift, and enter state 35

	ReturnStm      goto state 38
	Stm            goto state 24
	OpStm          goto state 25
	Type           goto state 26

State 37

	Decl -> Decl ',' Type id .                          (rule 59)

	')'            reduce using rule 59
	','            reduce using rule 59


State 38

	Func -> Type id '(' Decl ')' '{' Stmts ReturnStm . ';' '}'    (rule 3)
	Stm -> ReturnStm . ';'                              (rule 15)

	';'            shift, and enter state 90


State 39

	Stm -> print_str '(' . str ')' ';'                  (rule 18)

	str            shift, and enter state 89


State 40

	Stm -> print_int '(' . Exp ')' ';'                  (rule 17)

	num            shift, and enter state 48
	str            shift, and enter state 49
	id             shift, and enter state 50
	'('            shift, and enter state 53
	"++"           shift, and enter state 54
	"--"           shift, and enter state 55

	Exp            goto state 88
	Op             goto state 46

State 41

	Stm -> for '(' . OpFor ExpCompare ';' Op ')' Stm    (rule 11)
	Stm -> for '(' . OpFor ExpCompare ';' Op ')'        (rule 12)

	id             shift, and enter state 87
	int            shift, and enter state 4
	bool           shift, and enter state 5
	string         shift, and enter state 6

	OpFor          goto state 85
	Type           goto state 86

State 42

	Stm -> while '(' . ExpCompare ')' Stm               (rule 13)

	num            shift, and enter state 48
	str            shift, and enter state 49
	id             shift, and enter state 80
	true           shift, and enter state 81
	false          shift, and enter state 82
	'('            shift, and enter state 53
	"++"           shift, and enter state 54
	"--"           shift, and enter state 55
	'!'            shift, and enter state 83

	Exp            goto state 78
	Op             goto state 46
	ExpCompare     goto state 84

State 43

	Stm -> if '(' . ExpCompare ')' Stm else Stm         (rule 9)
	Stm -> if '(' . ExpCompare ')' Stm                  (rule 10)

	num            shift, and enter state 48
	str            shift, and enter state 49
	id             shift, and enter state 80
	true           shift, and enter state 81
	false          shift, and enter state 82
	'('            shift, and enter state 53
	"++"           shift, and enter state 54
	"--"           shift, and enter state 55
	'!'            shift, and enter state 83

	Exp            goto state 78
	Op             goto state 46
	ExpCompare     goto state 79

State 44

	Stm -> '{' Stmts . '}'                              (rule 14)
	Stmts -> Stmts . Stm                                (rule 53)

	id             shift, and enter state 27
	return         shift, and enter state 28
	int            shift, and enter state 4
	bool           shift, and enter state 5
	string         shift, and enter state 6
	'{'            shift, and enter state 29
	'}'            shift, and enter state 77
	if             shift, and enter state 31
	while          shift, and enter state 32
	for            shift, and enter state 33
	print_int      shift, and enter state 34
	print_str      shift, and enter state 35

	ReturnStm      goto state 23
	Stm            goto state 24
	OpStm          goto state 25
	Type           goto state 26

State 45

	Exp -> Exp . '+' Exp                                (rule 23)
	Exp -> Exp . '-' Exp                                (rule 24)
	Exp -> Exp . '*' Exp                                (rule 25)
	Exp -> Exp . '/' Exp                                (rule 26)
	Exp -> Exp . '%' Exp                                (rule 27)
	Exps -> Exp .                                       (rule 61)

	')'            reduce using rule 61
	'+'            shift, and enter state 72
	'-'            shift, and enter state 73
	'*'            shift, and enter state 74
	'/'            shift, and enter state 75
	'%'            shift, and enter state 76
	';'            reduce using rule 61
	','            reduce using rule 61


State 46

	Exp -> Op .                                         (rule 29)

	')'            reduce using rule 29
	'+'            reduce using rule 29
	'-'            reduce using rule 29
	'*'            reduce using rule 29
	'/'            reduce using rule 29
	'%'            reduce using rule 29
	';'            reduce using rule 29
	','            reduce using rule 29
	"=="           reduce using rule 29
	"!="           reduce using rule 29
	"<"            reduce using rule 29
	">"            reduce using rule 29
	">="           reduce using rule 29
	"<="           reduce using rule 29
	"&&"           reduce using rule 29
	"||"           reduce using rule 29


State 47

	ReturnStm -> return Exps .                          (rule 5)
	Exps -> Exps . ',' Exp                              (rule 62)

	';'            reduce using rule 5
	','            shift, and enter state 71


State 48

	Exp -> num .                                        (rule 19)

	')'            reduce using rule 19
	'+'            reduce using rule 19
	'-'            reduce using rule 19
	'*'            reduce using rule 19
	'/'            reduce using rule 19
	'%'            reduce using rule 19
	';'            reduce using rule 19
	','            reduce using rule 19
	"=="           reduce using rule 19
	"!="           reduce using rule 19
	"<"            reduce using rule 19
	">"            reduce using rule 19
	">="           reduce using rule 19
	"<="           reduce using rule 19
	"&&"           reduce using rule 19
	"||"           reduce using rule 19


State 49

	Exp -> str .                                        (rule 20)

	')'            reduce using rule 20
	'+'            reduce using rule 20
	'-'            reduce using rule 20
	'*'            reduce using rule 20
	'/'            reduce using rule 20
	'%'            reduce using rule 20
	';'            reduce using rule 20
	','            reduce using rule 20
	"=="           reduce using rule 20
	"!="           reduce using rule 20
	"<"            reduce using rule 20
	">"            reduce using rule 20
	">="           reduce using rule 20
	"<="           reduce using rule 20
	"&&"           reduce using rule 20
	"||"           reduce using rule 20


State 50

	Exp -> id .                                         (rule 21)
	Exp -> id . '(' Exps ')'                            (rule 28)
	Op -> id . "++"                                     (rule 31)
	Op -> id . "--"                                     (rule 33)

	'('            shift, and enter state 68
	')'            reduce using rule 21
	'+'            reduce using rule 21
	'-'            reduce using rule 21
	'*'            reduce using rule 21
	'/'            reduce using rule 21
	'%'            reduce using rule 21
	';'            reduce using rule 21
	','            reduce using rule 21
	"++"           shift, and enter state 69
	"--"           shift, and enter state 70
	"=="           reduce using rule 21
	"!="           reduce using rule 21
	"<"            reduce using rule 21
	">"            reduce using rule 21
	">="           reduce using rule 21
	"<="           reduce using rule 21
	"&&"           reduce using rule 21
	"||"           reduce using rule 21


State 51

	ReturnStm -> return true .                          (rule 6)

	';'            reduce using rule 6


State 52

	ReturnStm -> return false .                         (rule 7)

	';'            reduce using rule 7


State 53

	Exp -> '(' . Exp ')'                                (rule 22)

	num            shift, and enter state 48
	str            shift, and enter state 49
	id             shift, and enter state 50
	'('            shift, and enter state 53
	"++"           shift, and enter state 54
	"--"           shift, and enter state 55

	Exp            goto state 67
	Op             goto state 46

State 54

	Op -> "++" . id                                     (rule 30)

	id             shift, and enter state 66


State 55

	Op -> "--" . id                                     (rule 32)

	id             shift, and enter state 65


State 56

	Stm -> id '(' . Exps ')' ';'                        (rule 16)

	num            shift, and enter state 48
	str            shift, and enter state 49
	id             shift, and enter state 50
	'('            shift, and enter state 53
	')'            reduce using rule 60
	','            reduce using rule 60
	"++"           shift, and enter state 54
	"--"           shift, and enter state 55

	Exp            goto state 45
	Op             goto state 46
	Exps           goto state 64

State 57

	OpStm -> id '=' . Exp ';'                           (rule 34)
	OpStm -> id '=' . scan_int '(' ')' ';'              (rule 35)

	num            shift, and enter state 48
	str            shift, and enter state 49
	id             shift, and enter state 50
	'('            shift, and enter state 53
	"++"           shift, and enter state 54
	"--"           shift, and enter state 55
	scan_int       shift, and enter state 63

	Exp            goto state 62
	Op             goto state 46

State 58

	OpStm -> Type id . ';'                              (rule 36)
	OpStm -> Type id . '=' Exp ';'                      (rule 37)

	'='            shift, and enter state 60
	';'            shift, and enter state 61


State 59

	Stm -> ReturnStm ';' .                              (rule 15)

	id             reduce using rule 15
	return         reduce using rule 15
	int            reduce using rule 15
	bool           reduce using rule 15
	string         reduce using rule 15
	'{'            reduce using rule 15
	'}'            reduce using rule 15
	if             reduce using rule 15
	else           reduce using rule 15
	while          reduce using rule 15
	for            reduce using rule 15
	print_int      reduce using rule 15
	print_str      reduce using rule 15


State 60

	OpStm -> Type id '=' . Exp ';'                      (rule 37)

	num            shift, and enter state 48
	str            shift, and enter state 49
	id             shift, and enter state 50
	'('            shift, and enter state 53
	"++"           shift, and enter state 54
	"--"           shift, and enter state 55

	Exp            goto state 120
	Op             goto state 46

State 61

	OpStm -> Type id ';' .                              (rule 36)

	id             reduce using rule 36
	return         reduce using rule 36
	int            reduce using rule 36
	bool           reduce using rule 36
	string         reduce using rule 36
	'{'            reduce using rule 36
	'}'            reduce using rule 36
	if             reduce using rule 36
	else           reduce using rule 36
	while          reduce using rule 36
	for            reduce using rule 36
	print_int      reduce using rule 36
	print_str      reduce using rule 36


State 62

	Exp -> Exp . '+' Exp                                (rule 23)
	Exp -> Exp . '-' Exp                                (rule 24)
	Exp -> Exp . '*' Exp                                (rule 25)
	Exp -> Exp . '/' Exp                                (rule 26)
	Exp -> Exp . '%' Exp                                (rule 27)
	OpStm -> id '=' Exp . ';'                           (rule 34)

	'+'            shift, and enter state 72
	'-'            shift, and enter state 73
	'*'            shift, and enter state 74
	'/'            shift, and enter state 75
	'%'            shift, and enter state 76
	';'            shift, and enter state 119


State 63

	OpStm -> id '=' scan_int . '(' ')' ';'              (rule 35)

	'('            shift, and enter state 118


State 64

	Stm -> id '(' Exps . ')' ';'                        (rule 16)
	Exps -> Exps . ',' Exp                              (rule 62)

	')'            shift, and enter state 117
	','            shift, and enter state 71


State 65

	Op -> "--" id .                                     (rule 32)

	')'            reduce using rule 32
	'+'            reduce using rule 32
	'-'            reduce using rule 32
	'*'            reduce using rule 32
	'/'            reduce using rule 32
	'%'            reduce using rule 32
	';'            reduce using rule 32
	','            reduce using rule 32
	"=="           reduce using rule 32
	"!="           reduce using rule 32
	"<"            reduce using rule 32
	">"            reduce using rule 32
	">="           reduce using rule 32
	"<="           reduce using rule 32
	"&&"           reduce using rule 32
	"||"           reduce using rule 32


State 66

	Op -> "++" id .                                     (rule 30)

	')'            reduce using rule 30
	'+'            reduce using rule 30
	'-'            reduce using rule 30
	'*'            reduce using rule 30
	'/'            reduce using rule 30
	'%'            reduce using rule 30
	';'            reduce using rule 30
	','            reduce using rule 30
	"=="           reduce using rule 30
	"!="           reduce using rule 30
	"<"            reduce using rule 30
	">"            reduce using rule 30
	">="           reduce using rule 30
	"<="           reduce using rule 30
	"&&"           reduce using rule 30
	"||"           reduce using rule 30


State 67

	Exp -> '(' Exp . ')'                                (rule 22)
	Exp -> Exp . '+' Exp                                (rule 23)
	Exp -> Exp . '-' Exp                                (rule 24)
	Exp -> Exp . '*' Exp                                (rule 25)
	Exp -> Exp . '/' Exp                                (rule 26)
	Exp -> Exp . '%' Exp                                (rule 27)

	')'            shift, and enter state 116
	'+'            shift, and enter state 72
	'-'            shift, and enter state 73
	'*'            shift, and enter state 74
	'/'            shift, and enter state 75
	'%'            shift, and enter state 76


State 68

	Exp -> id '(' . Exps ')'                            (rule 28)

	num            shift, and enter state 48
	str            shift, and enter state 49
	id             shift, and enter state 50
	'('            shift, and enter state 53
	')'            reduce using rule 60
	','            reduce using rule 60
	"++"           shift, and enter state 54
	"--"           shift, and enter state 55

	Exp            goto state 45
	Op             goto state 46
	Exps           goto state 115

State 69

	Op -> id "++" .                                     (rule 31)

	')'            reduce using rule 31
	'+'            reduce using rule 31
	'-'            reduce using rule 31
	'*'            reduce using rule 31
	'/'            reduce using rule 31
	'%'            reduce using rule 31
	';'            reduce using rule 31
	','            reduce using rule 31
	"=="           reduce using rule 31
	"!="           reduce using rule 31
	"<"            reduce using rule 31
	">"            reduce using rule 31
	">="           reduce using rule 31
	"<="           reduce using rule 31
	"&&"           reduce using rule 31
	"||"           reduce using rule 31


State 70

	Op -> id "--" .                                     (rule 33)

	')'            reduce using rule 33
	'+'            reduce using rule 33
	'-'            reduce using rule 33
	'*'            reduce using rule 33
	'/'            reduce using rule 33
	'%'            reduce using rule 33
	';'            reduce using rule 33
	','            reduce using rule 33
	"=="           reduce using rule 33
	"!="           reduce using rule 33
	"<"            reduce using rule 33
	">"            reduce using rule 33
	">="           reduce using rule 33
	"<="           reduce using rule 33
	"&&"           reduce using rule 33
	"||"           reduce using rule 33


State 71

	Exps -> Exps ',' . Exp                              (rule 62)

	num            shift, and enter state 48
	str            shift, and enter state 49
	id             shift, and enter state 50
	'('            shift, and enter state 53
	"++"           shift, and enter state 54
	"--"           shift, and enter state 55

	Exp            goto state 114
	Op             goto state 46

State 72

	Exp -> Exp '+' . Exp                                (rule 23)

	num            shift, and enter state 48
	str            shift, and enter state 49
	id             shift, and enter state 50
	'('            shift, and enter state 53
	"++"           shift, and enter state 54
	"--"           shift, and enter state 55

	Exp            goto state 113
	Op             goto state 46

State 73

	Exp -> Exp '-' . Exp                                (rule 24)

	num            shift, and enter state 48
	str            shift, and enter state 49
	id             shift, and enter state 50
	'('            shift, and enter state 53
	"++"           shift, and enter state 54
	"--"           shift, and enter state 55

	Exp            goto state 112
	Op             goto state 46

State 74

	Exp -> Exp '*' . Exp                                (rule 25)

	num            shift, and enter state 48
	str            shift, and enter state 49
	id             shift, and enter state 50
	'('            shift, and enter state 53
	"++"           shift, and enter state 54
	"--"           shift, and enter state 55

	Exp            goto state 111
	Op             goto state 46

State 75

	Exp -> Exp '/' . Exp                                (rule 26)

	num            shift, and enter state 48
	str            shift, and enter state 49
	id             shift, and enter state 50
	'('            shift, and enter state 53
	"++"           shift, and enter state 54
	"--"           shift, and enter state 55

	Exp            goto state 110
	Op             goto state 46

State 76

	Exp -> Exp '%' . Exp                                (rule 27)

	num            shift, and enter state 48
	str            shift, and enter state 49
	id             shift, and enter state 50
	'('            shift, and enter state 53
	"++"           shift, and enter state 54
	"--"           shift, and enter state 55

	Exp            goto state 109
	Op             goto state 46

State 77

	Stm -> '{' Stmts '}' .                              (rule 14)

	id             reduce using rule 14
	return         reduce using rule 14
	int            reduce using rule 14
	bool           reduce using rule 14
	string         reduce using rule 14
	'{'            reduce using rule 14
	'}'            reduce using rule 14
	if             reduce using rule 14
	else           reduce using rule 14
	while          reduce using rule 14
	for            reduce using rule 14
	print_int      reduce using rule 14
	print_str      reduce using rule 14


State 78

	Exp -> Exp . '+' Exp                                (rule 23)
	Exp -> Exp . '-' Exp                                (rule 24)
	Exp -> Exp . '*' Exp                                (rule 25)
	Exp -> Exp . '/' Exp                                (rule 26)
	Exp -> Exp . '%' Exp                                (rule 27)
	ExpCompare -> Exp . "==" Exp                        (rule 40)
	ExpCompare -> Exp . "!=" Exp                        (rule 41)
	ExpCompare -> Exp . "<=" Exp                        (rule 42)
	ExpCompare -> Exp . ">=" Exp                        (rule 43)
	ExpCompare -> Exp . "<" Exp                         (rule 44)
	ExpCompare -> Exp . ">" Exp                         (rule 45)

	'+'            shift, and enter state 72
	'-'            shift, and enter state 73
	'*'            shift, and enter state 74
	'/'            shift, and enter state 75
	'%'            shift, and enter state 76
	"=="           shift, and enter state 103
	"!="           shift, and enter state 104
	"<"            shift, and enter state 105
	">"            shift, and enter state 106
	">="           shift, and enter state 107
	"<="           shift, and enter state 108


State 79

	Stm -> if '(' ExpCompare . ')' Stm else Stm         (rule 9)
	Stm -> if '(' ExpCompare . ')' Stm                  (rule 10)
	ExpCompare -> ExpCompare . "&&" ExpCompare          (rule 46)
	ExpCompare -> ExpCompare . "||" ExpCompare          (rule 47)

	')'            shift, and enter state 102
	"&&"           shift, and enter state 98
	"||"           shift, and enter state 99


State 80

	Exp -> id .                                         (rule 21)
	Exp -> id . '(' Exps ')'                            (rule 28)
	Op -> id . "++"                                     (rule 31)
	Op -> id . "--"                                     (rule 33)
	ExpCompare -> id . '(' Exps ')'                     (rule 51)

	'('            shift, and enter state 101
	'+'            reduce using rule 21
	'-'            reduce using rule 21
	'*'            reduce using rule 21
	'/'            reduce using rule 21
	'%'            reduce using rule 21
	"++"           shift, and enter state 69
	"--"           shift, and enter state 70
	"=="           reduce using rule 21
	"!="           reduce using rule 21
	"<"            reduce using rule 21
	">"            reduce using rule 21
	">="           reduce using rule 21
	"<="           reduce using rule 21


State 81

	ExpCompare -> true .                                (rule 49)

	')'            reduce using rule 49
	';'            reduce using rule 49
	"&&"           reduce using rule 49
	"||"           reduce using rule 49


State 82

	ExpCompare -> false .                               (rule 50)

	')'            reduce using rule 50
	';'            reduce using rule 50
	"&&"           reduce using rule 50
	"||"           reduce using rule 50


State 83

	ExpCompare -> '!' . '(' ExpCompare ')'              (rule 48)

	'('            shift, and enter state 100


State 84

	Stm -> while '(' ExpCompare . ')' Stm               (rule 13)
	ExpCompare -> ExpCompare . "&&" ExpCompare          (rule 46)
	ExpCompare -> ExpCompare . "||" ExpCompare          (rule 47)

	')'            shift, and enter state 97
	"&&"           shift, and enter state 98
	"||"           shift, and enter state 99


State 85

	Stm -> for '(' OpFor . ExpCompare ';' Op ')' Stm    (rule 11)
	Stm -> for '(' OpFor . ExpCompare ';' Op ')'        (rule 12)

	num            shift, and enter state 48
	str            shift, and enter state 49
	id             shift, and enter state 80
	true           shift, and enter state 81
	false          shift, and enter state 82
	'('            shift, and enter state 53
	"++"           shift, and enter state 54
	"--"           shift, and enter state 55
	'!'            shift, and enter state 83

	Exp            goto state 78
	Op             goto state 46
	ExpCompare     goto state 96

State 86

	OpFor -> Type . id '=' Exp ';'                      (rule 39)

	id             shift, and enter state 95


State 87

	OpFor -> id . '=' Exp ';'                           (rule 38)

	'='            shift, and enter state 94


State 88

	Stm -> print_int '(' Exp . ')' ';'                  (rule 17)
	Exp -> Exp . '+' Exp                                (rule 23)
	Exp -> Exp . '-' Exp                                (rule 24)
	Exp -> Exp . '*' Exp                                (rule 25)
	Exp -> Exp . '/' Exp                                (rule 26)
	Exp -> Exp . '%' Exp                                (rule 27)

	')'            shift, and enter state 93
	'+'            shift, and enter state 72
	'-'            shift, and enter state 73
	'*'            shift, and enter state 74
	'/'            shift, and enter state 75
	'%'            shift, and enter state 76


State 89

	Stm -> print_str '(' str . ')' ';'                  (rule 18)

	')'            shift, and enter state 92


State 90

	Func -> Type id '(' Decl ')' '{' Stmts ReturnStm ';' . '}'    (rule 3)
	Stm -> ReturnStm ';' .                              (rule 15)

	id             reduce using rule 15
	return         reduce using rule 15
	int            reduce using rule 15
	bool           reduce using rule 15
	string         reduce using rule 15
	'{'            reduce using rule 15
	'}'            shift, and enter state 91
	if             reduce using rule 15
	while          reduce using rule 15
	for            reduce using rule 15
	print_int      reduce using rule 15
	print_str      reduce using rule 15


State 91

	Func -> Type id '(' Decl ')' '{' Stmts ReturnStm ';' '}' .    (rule 3)

	int            reduce using rule 3
	bool           reduce using rule 3
	string         reduce using rule 3
	%eof           reduce using rule 3


State 92

	Stm -> print_str '(' str ')' . ';'                  (rule 18)

	';'            shift, and enter state 141


State 93

	Stm -> print_int '(' Exp ')' . ';'                  (rule 17)

	';'            shift, and enter state 140


State 94

	OpFor -> id '=' . Exp ';'                           (rule 38)

	num            shift, and enter state 48
	str            shift, and enter state 49
	id             shift, and enter state 50
	'('            shift, and enter state 53
	"++"           shift, and enter state 54
	"--"           shift, and enter state 55

	Exp            goto state 139
	Op             goto state 46

State 95

	OpFor -> Type id . '=' Exp ';'                      (rule 39)

	'='            shift, and enter state 138


State 96

	Stm -> for '(' OpFor ExpCompare . ';' Op ')' Stm    (rule 11)
	Stm -> for '(' OpFor ExpCompare . ';' Op ')'        (rule 12)
	ExpCompare -> ExpCompare . "&&" ExpCompare          (rule 46)
	ExpCompare -> ExpCompare . "||" ExpCompare          (rule 47)

	';'            shift, and enter state 137
	"&&"           shift, and enter state 98
	"||"           shift, and enter state 99


State 97

	Stm -> while '(' ExpCompare ')' . Stm               (rule 13)

	id             shift, and enter state 27
	return         shift, and enter state 28
	int            shift, and enter state 4
	bool           shift, and enter state 5
	string         shift, and enter state 6
	'{'            shift, and enter state 29
	if             shift, and enter state 31
	while          shift, and enter state 32
	for            shift, and enter state 33
	print_int      shift, and enter state 34
	print_str      shift, and enter state 35

	ReturnStm      goto state 23
	Stm            goto state 136
	OpStm          goto state 25
	Type           goto state 26

State 98

	ExpCompare -> ExpCompare "&&" . ExpCompare          (rule 46)

	num            shift, and enter state 48
	str            shift, and enter state 49
	id             shift, and enter state 80
	true           shift, and enter state 81
	false          shift, and enter state 82
	'('            shift, and enter state 53
	"++"           shift, and enter state 54
	"--"           shift, and enter state 55
	'!'            shift, and enter state 83

	Exp            goto state 78
	Op             goto state 46
	ExpCompare     goto state 135

State 99

	ExpCompare -> ExpCompare "||" . ExpCompare          (rule 47)

	num            shift, and enter state 48
	str            shift, and enter state 49
	id             shift, and enter state 80
	true           shift, and enter state 81
	false          shift, and enter state 82
	'('            shift, and enter state 53
	"++"           shift, and enter state 54
	"--"           shift, and enter state 55
	'!'            shift, and enter state 83

	Exp            goto state 78
	Op             goto state 46
	ExpCompare     goto state 134

State 100

	ExpCompare -> '!' '(' . ExpCompare ')'              (rule 48)

	num            shift, and enter state 48
	str            shift, and enter state 49
	id             shift, and enter state 80
	true           shift, and enter state 81
	false          shift, and enter state 82
	'('            shift, and enter state 53
	"++"           shift, and enter state 54
	"--"           shift, and enter state 55
	'!'            shift, and enter state 83

	Exp            goto state 78
	Op             goto state 46
	ExpCompare     goto state 133

State 101

	Exp -> id '(' . Exps ')'                            (rule 28)
	ExpCompare -> id '(' . Exps ')'                     (rule 51)

	num            shift, and enter state 48
	str            shift, and enter state 49
	id             shift, and enter state 50
	'('            shift, and enter state 53
	')'            reduce using rule 60
	','            reduce using rule 60
	"++"           shift, and enter state 54
	"--"           shift, and enter state 55

	Exp            goto state 45
	Op             goto state 46
	Exps           goto state 132

State 102

	Stm -> if '(' ExpCompare ')' . Stm else Stm         (rule 9)
	Stm -> if '(' ExpCompare ')' . Stm                  (rule 10)

	id             shift, and enter state 27
	return         shift, and enter state 28
	int            shift, and enter state 4
	bool           shift, and enter state 5
	string         shift, and enter state 6
	'{'            shift, and enter state 29
	if             shift, and enter state 31
	while          shift, and enter state 32
	for            shift, and enter state 33
	print_int      shift, and enter state 34
	print_str      shift, and enter state 35

	ReturnStm      goto state 23
	Stm            goto state 131
	OpStm          goto state 25
	Type           goto state 26

State 103

	ExpCompare -> Exp "==" . Exp                        (rule 40)

	num            shift, and enter state 48
	str            shift, and enter state 49
	id             shift, and enter state 50
	'('            shift, and enter state 53
	"++"           shift, and enter state 54
	"--"           shift, and enter state 55

	Exp            goto state 130
	Op             goto state 46

State 104

	ExpCompare -> Exp "!=" . Exp                        (rule 41)

	num            shift, and enter state 48
	str            shift, and enter state 49
	id             shift, and enter state 50
	'('            shift, and enter state 53
	"++"           shift, and enter state 54
	"--"           shift, and enter state 55

	Exp            goto state 129
	Op             goto state 46

State 105

	ExpCompare -> Exp "<" . Exp                         (rule 44)

	num            shift, and enter state 48
	str            shift, and enter state 49
	id             shift, and enter state 50
	'('            shift, and enter state 53
	"++"           shift, and enter state 54
	"--"           shift, and enter state 55

	Exp            goto state 128
	Op             goto state 46

State 106

	ExpCompare -> Exp ">" . Exp                         (rule 45)

	num            shift, and enter state 48
	str            shift, and enter state 49
	id             shift, and enter state 50
	'('            shift, and enter state 53
	"++"           shift, and enter state 54
	"--"           shift, and enter state 55

	Exp            goto state 127
	Op             goto state 46

State 107

	ExpCompare -> Exp ">=" . Exp                        (rule 43)

	num            shift, and enter state 48
	str            shift, and enter state 49
	id             shift, and enter state 50
	'('            shift, and enter state 53
	"++"           shift, and enter state 54
	"--"           shift, and enter state 55

	Exp            goto state 126
	Op             goto state 46

State 108

	ExpCompare -> Exp "<=" . Exp                        (rule 42)

	num            shift, and enter state 48
	str            shift, and enter state 49
	id             shift, and enter state 50
	'('            shift, and enter state 53
	"++"           shift, and enter state 54
	"--"           shift, and enter state 55

	Exp            goto state 125
	Op             goto state 46

State 109

	Exp -> Exp . '+' Exp                                (rule 23)
	Exp -> Exp . '-' Exp                                (rule 24)
	Exp -> Exp . '*' Exp                                (rule 25)
	Exp -> Exp . '/' Exp                                (rule 26)
	Exp -> Exp . '%' Exp                                (rule 27)
	Exp -> Exp '%' Exp .                                (rule 27)

	')'            reduce using rule 27
	'+'            reduce using rule 27
	'-'            reduce using rule 27
	'*'            reduce using rule 27
	'/'            reduce using rule 27
	'%'            reduce using rule 27
	';'            reduce using rule 27
	','            reduce using rule 27
	"=="           reduce using rule 27
	"!="           reduce using rule 27
	"<"            reduce using rule 27
	">"            reduce using rule 27
	">="           reduce using rule 27
	"<="           reduce using rule 27
	"&&"           reduce using rule 27
	"||"           reduce using rule 27


State 110

	Exp -> Exp . '+' Exp                                (rule 23)
	Exp -> Exp . '-' Exp                                (rule 24)
	Exp -> Exp . '*' Exp                                (rule 25)
	Exp -> Exp . '/' Exp                                (rule 26)
	Exp -> Exp '/' Exp .                                (rule 26)
	Exp -> Exp . '%' Exp                                (rule 27)

	')'            reduce using rule 26
	'+'            reduce using rule 26
	'-'            reduce using rule 26
	'*'            reduce using rule 26
	'/'            reduce using rule 26
	'%'            reduce using rule 26
	';'            reduce using rule 26
	','            reduce using rule 26
	"=="           reduce using rule 26
	"!="           reduce using rule 26
	"<"            reduce using rule 26
	">"            reduce using rule 26
	">="           reduce using rule 26
	"<="           reduce using rule 26
	"&&"           reduce using rule 26
	"||"           reduce using rule 26


State 111

	Exp -> Exp . '+' Exp                                (rule 23)
	Exp -> Exp . '-' Exp                                (rule 24)
	Exp -> Exp . '*' Exp                                (rule 25)
	Exp -> Exp '*' Exp .                                (rule 25)
	Exp -> Exp . '/' Exp                                (rule 26)
	Exp -> Exp . '%' Exp                                (rule 27)

	')'            reduce using rule 25
	'+'            reduce using rule 25
	'-'            reduce using rule 25
	'*'            reduce using rule 25
	'/'            reduce using rule 25
	'%'            reduce using rule 25
	';'            reduce using rule 25
	','            reduce using rule 25
	"=="           reduce using rule 25
	"!="           reduce using rule 25
	"<"            reduce using rule 25
	">"            reduce using rule 25
	">="           reduce using rule 25
	"<="           reduce using rule 25
	"&&"           reduce using rule 25
	"||"           reduce using rule 25


State 112

	Exp -> Exp . '+' Exp                                (rule 23)
	Exp -> Exp . '-' Exp                                (rule 24)
	Exp -> Exp '-' Exp .                                (rule 24)
	Exp -> Exp . '*' Exp                                (rule 25)
	Exp -> Exp . '/' Exp                                (rule 26)
	Exp -> Exp . '%' Exp                                (rule 27)

	')'            reduce using rule 24
	'+'            reduce using rule 24
	'-'            reduce using rule 24
	'*'            shift, and enter state 74
	'/'            shift, and enter state 75
	'%'            shift, and enter state 76
	';'            reduce using rule 24
	','            reduce using rule 24
	"=="           reduce using rule 24
	"!="           reduce using rule 24
	"<"            reduce using rule 24
	">"            reduce using rule 24
	">="           reduce using rule 24
	"<="           reduce using rule 24
	"&&"           reduce using rule 24
	"||"           reduce using rule 24


State 113

	Exp -> Exp . '+' Exp                                (rule 23)
	Exp -> Exp '+' Exp .                                (rule 23)
	Exp -> Exp . '-' Exp                                (rule 24)
	Exp -> Exp . '*' Exp                                (rule 25)
	Exp -> Exp . '/' Exp                                (rule 26)
	Exp -> Exp . '%' Exp                                (rule 27)

	')'            reduce using rule 23
	'+'            reduce using rule 23
	'-'            reduce using rule 23
	'*'            shift, and enter state 74
	'/'            shift, and enter state 75
	'%'            shift, and enter state 76
	';'            reduce using rule 23
	','            reduce using rule 23
	"=="           reduce using rule 23
	"!="           reduce using rule 23
	"<"            reduce using rule 23
	">"            reduce using rule 23
	">="           reduce using rule 23
	"<="           reduce using rule 23
	"&&"           reduce using rule 23
	"||"           reduce using rule 23


State 114

	Exp -> Exp . '+' Exp                                (rule 23)
	Exp -> Exp . '-' Exp                                (rule 24)
	Exp -> Exp . '*' Exp                                (rule 25)
	Exp -> Exp . '/' Exp                                (rule 26)
	Exp -> Exp . '%' Exp                                (rule 27)
	Exps -> Exps ',' Exp .                              (rule 62)

	')'            reduce using rule 62
	'+'            shift, and enter state 72
	'-'            shift, and enter state 73
	'*'            shift, and enter state 74
	'/'            shift, and enter state 75
	'%'            shift, and enter state 76
	';'            reduce using rule 62
	','            reduce using rule 62


State 115

	Exp -> id '(' Exps . ')'                            (rule 28)
	Exps -> Exps . ',' Exp                              (rule 62)

	')'            shift, and enter state 124
	','            shift, and enter state 71


State 116

	Exp -> '(' Exp ')' .                                (rule 22)

	')'            reduce using rule 22
	'+'            reduce using rule 22
	'-'            reduce using rule 22
	'*'            reduce using rule 22
	'/'            reduce using rule 22
	'%'            reduce using rule 22
	';'            reduce using rule 22
	','            reduce using rule 22
	"=="           reduce using rule 22
	"!="           reduce using rule 22
	"<"            reduce using rule 22
	">"            reduce using rule 22
	">="           reduce using rule 22
	"<="           reduce using rule 22
	"&&"           reduce using rule 22
	"||"           reduce using rule 22


State 117

	Stm -> id '(' Exps ')' . ';'                        (rule 16)

	';'            shift, and enter state 123


State 118

	OpStm -> id '=' scan_int '(' . ')' ';'              (rule 35)

	')'            shift, and enter state 122


State 119

	OpStm -> id '=' Exp ';' .                           (rule 34)

	id             reduce using rule 34
	return         reduce using rule 34
	int            reduce using rule 34
	bool           reduce using rule 34
	string         reduce using rule 34
	'{'            reduce using rule 34
	'}'            reduce using rule 34
	if             reduce using rule 34
	else           reduce using rule 34
	while          reduce using rule 34
	for            reduce using rule 34
	print_int      reduce using rule 34
	print_str      reduce using rule 34


State 120

	Exp -> Exp . '+' Exp                                (rule 23)
	Exp -> Exp . '-' Exp                                (rule 24)
	Exp -> Exp . '*' Exp                                (rule 25)
	Exp -> Exp . '/' Exp                                (rule 26)
	Exp -> Exp . '%' Exp                                (rule 27)
	OpStm -> Type id '=' Exp . ';'                      (rule 37)

	'+'            shift, and enter state 72
	'-'            shift, and enter state 73
	'*'            shift, and enter state 74
	'/'            shift, and enter state 75
	'%'            shift, and enter state 76
	';'            shift, and enter state 121


State 121

	OpStm -> Type id '=' Exp ';' .                      (rule 37)

	id             reduce using rule 37
	return         reduce using rule 37
	int            reduce using rule 37
	bool           reduce using rule 37
	string         reduce using rule 37
	'{'            reduce using rule 37
	'}'            reduce using rule 37
	if             reduce using rule 37
	else           reduce using rule 37
	while          reduce using rule 37
	for            reduce using rule 37
	print_int      reduce using rule 37
	print_str      reduce using rule 37


State 122

	OpStm -> id '=' scan_int '(' ')' . ';'              (rule 35)

	';'            shift, and enter state 149


State 123

	Stm -> id '(' Exps ')' ';' .                        (rule 16)

	id             reduce using rule 16
	return         reduce using rule 16
	int            reduce using rule 16
	bool           reduce using rule 16
	string         reduce using rule 16
	'{'            reduce using rule 16
	'}'            reduce using rule 16
	if             reduce using rule 16
	else           reduce using rule 16
	while          reduce using rule 16
	for            reduce using rule 16
	print_int      reduce using rule 16
	print_str      reduce using rule 16


State 124

	Exp -> id '(' Exps ')' .                            (rule 28)

	')'            reduce using rule 28
	'+'            reduce using rule 28
	'-'            reduce using rule 28
	'*'            reduce using rule 28
	'/'            reduce using rule 28
	'%'            reduce using rule 28
	';'            reduce using rule 28
	','            reduce using rule 28
	"=="           reduce using rule 28
	"!="           reduce using rule 28
	"<"            reduce using rule 28
	">"            reduce using rule 28
	">="           reduce using rule 28
	"<="           reduce using rule 28
	"&&"           reduce using rule 28
	"||"           reduce using rule 28


State 125

	Exp -> Exp . '+' Exp                                (rule 23)
	Exp -> Exp . '-' Exp                                (rule 24)
	Exp -> Exp . '*' Exp                                (rule 25)
	Exp -> Exp . '/' Exp                                (rule 26)
	Exp -> Exp . '%' Exp                                (rule 27)
	ExpCompare -> Exp "<=" Exp .                        (rule 42)

	')'            reduce using rule 42
	'+'            shift, and enter state 72
	'-'            shift, and enter state 73
	'*'            shift, and enter state 74
	'/'            shift, and enter state 75
	'%'            shift, and enter state 76
	';'            reduce using rule 42
	"&&"           reduce using rule 42
	"||"           reduce using rule 42


State 126

	Exp -> Exp . '+' Exp                                (rule 23)
	Exp -> Exp . '-' Exp                                (rule 24)
	Exp -> Exp . '*' Exp                                (rule 25)
	Exp -> Exp . '/' Exp                                (rule 26)
	Exp -> Exp . '%' Exp                                (rule 27)
	ExpCompare -> Exp ">=" Exp .                        (rule 43)

	')'            reduce using rule 43
	'+'            shift, and enter state 72
	'-'            shift, and enter state 73
	'*'            shift, and enter state 74
	'/'            shift, and enter state 75
	'%'            shift, and enter state 76
	';'            reduce using rule 43
	"&&"           reduce using rule 43
	"||"           reduce using rule 43


State 127

	Exp -> Exp . '+' Exp                                (rule 23)
	Exp -> Exp . '-' Exp                                (rule 24)
	Exp -> Exp . '*' Exp                                (rule 25)
	Exp -> Exp . '/' Exp                                (rule 26)
	Exp -> Exp . '%' Exp                                (rule 27)
	ExpCompare -> Exp ">" Exp .                         (rule 45)

	')'            reduce using rule 45
	'+'            shift, and enter state 72
	'-'            shift, and enter state 73
	'*'            shift, and enter state 74
	'/'            shift, and enter state 75
	'%'            shift, and enter state 76
	';'            reduce using rule 45
	"&&"           reduce using rule 45
	"||"           reduce using rule 45


State 128

	Exp -> Exp . '+' Exp                                (rule 23)
	Exp -> Exp . '-' Exp                                (rule 24)
	Exp -> Exp . '*' Exp                                (rule 25)
	Exp -> Exp . '/' Exp                                (rule 26)
	Exp -> Exp . '%' Exp                                (rule 27)
	ExpCompare -> Exp "<" Exp .                         (rule 44)

	')'            reduce using rule 44
	'+'            shift, and enter state 72
	'-'            shift, and enter state 73
	'*'            shift, and enter state 74
	'/'            shift, and enter state 75
	'%'            shift, and enter state 76
	';'            reduce using rule 44
	"&&"           reduce using rule 44
	"||"           reduce using rule 44


State 129

	Exp -> Exp . '+' Exp                                (rule 23)
	Exp -> Exp . '-' Exp                                (rule 24)
	Exp -> Exp . '*' Exp                                (rule 25)
	Exp -> Exp . '/' Exp                                (rule 26)
	Exp -> Exp . '%' Exp                                (rule 27)
	ExpCompare -> Exp "!=" Exp .                        (rule 41)

	')'            reduce using rule 41
	'+'            shift, and enter state 72
	'-'            shift, and enter state 73
	'*'            shift, and enter state 74
	'/'            shift, and enter state 75
	'%'            shift, and enter state 76
	';'            reduce using rule 41
	"&&"           reduce using rule 41
	"||"           reduce using rule 41


State 130

	Exp -> Exp . '+' Exp                                (rule 23)
	Exp -> Exp . '-' Exp                                (rule 24)
	Exp -> Exp . '*' Exp                                (rule 25)
	Exp -> Exp . '/' Exp                                (rule 26)
	Exp -> Exp . '%' Exp                                (rule 27)
	ExpCompare -> Exp "==" Exp .                        (rule 40)

	')'            reduce using rule 40
	'+'            shift, and enter state 72
	'-'            shift, and enter state 73
	'*'            shift, and enter state 74
	'/'            shift, and enter state 75
	'%'            shift, and enter state 76
	';'            reduce using rule 40
	"&&"           reduce using rule 40
	"||"           reduce using rule 40


State 131

	Stm -> if '(' ExpCompare ')' Stm . else Stm         (rule 9)
	Stm -> if '(' ExpCompare ')' Stm .                  (rule 10)

	id             reduce using rule 10
	return         reduce using rule 10
	int            reduce using rule 10
	bool           reduce using rule 10
	string         reduce using rule 10
	'{'            reduce using rule 10
	'}'            reduce using rule 10
	if             reduce using rule 10
	else           shift, and enter state 148
			(reduce using rule 10)

	while          reduce using rule 10
	for            reduce using rule 10
	print_int      reduce using rule 10
	print_str      reduce using rule 10


State 132

	Exp -> id '(' Exps . ')'                            (rule 28)
	ExpCompare -> id '(' Exps . ')'                     (rule 51)
	Exps -> Exps . ',' Exp                              (rule 62)

	')'            shift, and enter state 147
	','            shift, and enter state 71


State 133

	ExpCompare -> ExpCompare . "&&" ExpCompare          (rule 46)
	ExpCompare -> ExpCompare . "||" ExpCompare          (rule 47)
	ExpCompare -> '!' '(' ExpCompare . ')'              (rule 48)

	')'            shift, and enter state 146
	"&&"           shift, and enter state 98
	"||"           shift, and enter state 99


State 134

	ExpCompare -> ExpCompare . "&&" ExpCompare          (rule 46)
	ExpCompare -> ExpCompare . "||" ExpCompare          (rule 47)
	ExpCompare -> ExpCompare "||" ExpCompare .          (rule 47)

	')'            reduce using rule 47
	';'            reduce using rule 47
	"&&"           reduce using rule 47
	"||"           reduce using rule 47


State 135

	ExpCompare -> ExpCompare . "&&" ExpCompare          (rule 46)
	ExpCompare -> ExpCompare "&&" ExpCompare .          (rule 46)
	ExpCompare -> ExpCompare . "||" ExpCompare          (rule 47)

	')'            reduce using rule 46
	';'            reduce using rule 46
	"&&"           reduce using rule 46
	"||"           reduce using rule 46


State 136

	Stm -> while '(' ExpCompare ')' Stm .               (rule 13)

	id             reduce using rule 13
	return         reduce using rule 13
	int            reduce using rule 13
	bool           reduce using rule 13
	string         reduce using rule 13
	'{'            reduce using rule 13
	'}'            reduce using rule 13
	if             reduce using rule 13
	else           reduce using rule 13
	while          reduce using rule 13
	for            reduce using rule 13
	print_int      reduce using rule 13
	print_str      reduce using rule 13


State 137

	Stm -> for '(' OpFor ExpCompare ';' . Op ')' Stm    (rule 11)
	Stm -> for '(' OpFor ExpCompare ';' . Op ')'        (rule 12)

	id             shift, and enter state 145
	"++"           shift, and enter state 54
	"--"           shift, and enter state 55

	Op             goto state 144

State 138

	OpFor -> Type id '=' . Exp ';'                      (rule 39)

	num            shift, and enter state 48
	str            shift, and enter state 49
	id             shift, and enter state 50
	'('            shift, and enter state 53
	"++"           shift, and enter state 54
	"--"           shift, and enter state 55

	Exp            goto state 143
	Op             goto state 46

State 139

	Exp -> Exp . '+' Exp                                (rule 23)
	Exp -> Exp . '-' Exp                                (rule 24)
	Exp -> Exp . '*' Exp                                (rule 25)
	Exp -> Exp . '/' Exp                                (rule 26)
	Exp -> Exp . '%' Exp                                (rule 27)
	OpFor -> id '=' Exp . ';'                           (rule 38)

	'+'            shift, and enter state 72
	'-'            shift, and enter state 73
	'*'            shift, and enter state 74
	'/'            shift, and enter state 75
	'%'            shift, and enter state 76
	';'            shift, and enter state 142


State 140

	Stm -> print_int '(' Exp ')' ';' .                  (rule 17)

	id             reduce using rule 17
	return         reduce using rule 17
	int            reduce using rule 17
	bool           reduce using rule 17
	string         reduce using rule 17
	'{'            reduce using rule 17
	'}'            reduce using rule 17
	if             reduce using rule 17
	else           reduce using rule 17
	while          reduce using rule 17
	for            reduce using rule 17
	print_int      reduce using rule 17
	print_str      reduce using rule 17


State 141

	Stm -> print_str '(' str ')' ';' .                  (rule 18)

	id             reduce using rule 18
	return         reduce using rule 18
	int            reduce using rule 18
	bool           reduce using rule 18
	string         reduce using rule 18
	'{'            reduce using rule 18
	'}'            reduce using rule 18
	if             reduce using rule 18
	else           reduce using rule 18
	while          reduce using rule 18
	for            reduce using rule 18
	print_int      reduce using rule 18
	print_str      reduce using rule 18


State 142

	OpFor -> id '=' Exp ';' .                           (rule 38)

	num            reduce using rule 38
	str            reduce using rule 38
	id             reduce using rule 38
	true           reduce using rule 38
	false          reduce using rule 38
	'('            reduce using rule 38
	"++"           reduce using rule 38
	"--"           reduce using rule 38
	'!'            reduce using rule 38


State 143

	Exp -> Exp . '+' Exp                                (rule 23)
	Exp -> Exp . '-' Exp                                (rule 24)
	Exp -> Exp . '*' Exp                                (rule 25)
	Exp -> Exp . '/' Exp                                (rule 26)
	Exp -> Exp . '%' Exp                                (rule 27)
	OpFor -> Type id '=' Exp . ';'                      (rule 39)

	'+'            shift, and enter state 72
	'-'            shift, and enter state 73
	'*'            shift, and enter state 74
	'/'            shift, and enter state 75
	'%'            shift, and enter state 76
	';'            shift, and enter state 152


State 144

	Stm -> for '(' OpFor ExpCompare ';' Op . ')' Stm    (rule 11)
	Stm -> for '(' OpFor ExpCompare ';' Op . ')'        (rule 12)

	')'            shift, and enter state 151


State 145

	Op -> id . "++"                                     (rule 31)
	Op -> id . "--"                                     (rule 33)

	"++"           shift, and enter state 69
	"--"           shift, and enter state 70


State 146

	ExpCompare -> '!' '(' ExpCompare ')' .              (rule 48)

	')'            reduce using rule 48
	';'            reduce using rule 48
	"&&"           reduce using rule 48
	"||"           reduce using rule 48


State 147

	Exp -> id '(' Exps ')' .                            (rule 28)
	ExpCompare -> id '(' Exps ')' .                     (rule 51)

	')'            reduce using rule 51
	'+'            reduce using rule 28
	'-'            reduce using rule 28
	'*'            reduce using rule 28
	'/'            reduce using rule 28
	'%'            reduce using rule 28
	';'            reduce using rule 51
	"=="           reduce using rule 28
	"!="           reduce using rule 28
	"<"            reduce using rule 28
	">"            reduce using rule 28
	">="           reduce using rule 28
	"<="           reduce using rule 28
	"&&"           reduce using rule 51
	"||"           reduce using rule 51


State 148

	Stm -> if '(' ExpCompare ')' Stm else . Stm         (rule 9)

	id             shift, and enter state 27
	return         shift, and enter state 28
	int            shift, and enter state 4
	bool           shift, and enter state 5
	string         shift, and enter state 6
	'{'            shift, and enter state 29
	if             shift, and enter state 31
	while          shift, and enter state 32
	for            shift, and enter state 33
	print_int      shift, and enter state 34
	print_str      shift, and enter state 35

	ReturnStm      goto state 23
	Stm            goto state 150
	OpStm          goto state 25
	Type           goto state 26

State 149

	OpStm -> id '=' scan_int '(' ')' ';' .              (rule 35)

	id             reduce using rule 35
	return         reduce using rule 35
	int            reduce using rule 35
	bool           reduce using rule 35
	string         reduce using rule 35
	'{'            reduce using rule 35
	'}'            reduce using rule 35
	if             reduce using rule 35
	else           reduce using rule 35
	while          reduce using rule 35
	for            reduce using rule 35
	print_int      reduce using rule 35
	print_str      reduce using rule 35


State 150

	Stm -> if '(' ExpCompare ')' Stm else Stm .         (rule 9)

	id             reduce using rule 9
	return         reduce using rule 9
	int            reduce using rule 9
	bool           reduce using rule 9
	string         reduce using rule 9
	'{'            reduce using rule 9
	'}'            reduce using rule 9
	if             reduce using rule 9
	else           reduce using rule 9
	while          reduce using rule 9
	for            reduce using rule 9
	print_int      reduce using rule 9
	print_str      reduce using rule 9


State 151

	Stm -> for '(' OpFor ExpCompare ';' Op ')' . Stm    (rule 11)
	Stm -> for '(' OpFor ExpCompare ';' Op ')' .        (rule 12)

	id             shift, and enter state 27
			(reduce using rule 12)

	return         shift, and enter state 28
			(reduce using rule 12)

	int            shift, and enter state 4
			(reduce using rule 12)

	bool           shift, and enter state 5
			(reduce using rule 12)

	string         shift, and enter state 6
			(reduce using rule 12)

	'{'            shift, and enter state 29
			(reduce using rule 12)

	'}'            reduce using rule 12
	if             shift, and enter state 31
			(reduce using rule 12)

	else           reduce using rule 12
	while          shift, and enter state 32
			(reduce using rule 12)

	for            shift, and enter state 33
			(reduce using rule 12)

	print_int      shift, and enter state 34
			(reduce using rule 12)

	print_str      shift, and enter state 35
			(reduce using rule 12)


	ReturnStm      goto state 23
	Stm            goto state 153
	OpStm          goto state 25
	Type           goto state 26

State 152

	OpFor -> Type id '=' Exp ';' .                      (rule 39)

	num            reduce using rule 39
	str            reduce using rule 39
	id             reduce using rule 39
	true           reduce using rule 39
	false          reduce using rule 39
	'('            reduce using rule 39
	"++"           reduce using rule 39
	"--"           reduce using rule 39
	'!'            reduce using rule 39


State 153

	Stm -> for '(' OpFor ExpCompare ';' Op ')' Stm .    (rule 11)

	id             reduce using rule 11
	return         reduce using rule 11
	int            reduce using rule 11
	bool           reduce using rule 11
	string         reduce using rule 11
	'{'            reduce using rule 11
	'}'            reduce using rule 11
	if             reduce using rule 11
	else           reduce using rule 11
	while          reduce using rule 11
	for            reduce using rule 11
	print_int      reduce using rule 11
	print_str      reduce using rule 11


-----------------------------------------------------------------------------
Grammar Totals
-----------------------------------------------------------------------------
Number of rules: 63
Number of terminals: 42
Number of non-terminals: 14
Number of states: 154
